// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractDataLayrChallengeUtils

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// DataLayrChallengeUtilsDataStoreKZGMetadata is an auto generated low-level Go binding around an user-defined struct.
type DataLayrChallengeUtilsDataStoreKZGMetadata struct {
	C      BN254G1Point
	Degree *big.Int
	NumSys uint32
	NumPar uint32
}

// DataLayrChallengeUtilsMultiRevealProof is an auto generated low-level Go binding around an user-defined struct.
type DataLayrChallengeUtilsMultiRevealProof struct {
	InterpolationPoly BN254G1Point
	RevealProof       BN254G1Point
	ZeroPoly          BN254G2Point
	ZeroPolyProof     []byte
}

// IDataLayrServiceManagerSignatoryRecordMinusDataStoreId is an auto generated low-level Go binding around an user-defined struct.
type IDataLayrServiceManagerSignatoryRecordMinusDataStoreId struct {
	NonSignerPubkeyHashes   [][32]byte
	SignedStakeFirstQuorum  *big.Int
	SignedStakeSecondQuorum *big.Int
}

// ContractDataLayrChallengeUtilsMetaData contains all meta data concerning the ContractDataLayrChallengeUtils contract.
var ContractDataLayrChallengeUtilsMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"firstChunkNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes[]\",\"name\":\"polys\",\"type\":\"bytes[]\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point\",\"name\":\"interpolationPoly\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point\",\"name\":\"revealProof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBN254.G2Point\",\"name\":\"zeroPoly\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"zeroPolyProof\",\"type\":\"bytes\"}],\"internalType\":\"structDataLayrChallengeUtils.MultiRevealProof[]\",\"name\":\"multiRevealProofs\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBN254.G2Point\",\"name\":\"polyEquivalenceProof\",\"type\":\"tuple\"}],\"name\":\"batchNonInteractivePolynomialProofs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorPubkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nonSignerIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"nonSignerPubkeyHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"signedStakeFirstQuorum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signedStakeSecondQuorum\",\"type\":\"uint256\"}],\"internalType\":\"structIDataLayrServiceManager.SignatoryRecordMinusDataStoreId\",\"name\":\"signatoryRecord\",\"type\":\"tuple\"}],\"name\":\"checkExclusionFromNonSignerSet\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorPubkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nonSignerIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"nonSignerPubkeyHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"signedStakeFirstQuorum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"signedStakeSecondQuorum\",\"type\":\"uint256\"}],\"internalType\":\"structIDataLayrServiceManager.SignatoryRecordMinusDataStoreId\",\"name\":\"signatoryRecord\",\"type\":\"tuple\"}],\"name\":\"checkInclusionInNonSignerSet\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getDataCommitmentAndMultirevealDegreeAndSymbolBreakdownFromHeader\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point\",\"name\":\"c\",\"type\":\"tuple\"},{\"internalType\":\"uint48\",\"name\":\"degree\",\"type\":\"uint48\"},{\"internalType\":\"uint32\",\"name\":\"numSys\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numPar\",\"type\":\"uint32\"}],\"internalType\":\"structDataLayrChallengeUtils.DataStoreKZGMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"i\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numSys\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numPar\",\"type\":\"uint32\"}],\"name\":\"getLeadingCosetIndexFromHighestRootOfUnity\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getNumSysFromHeader\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"degree\",\"type\":\"uint256\"}],\"name\":\"getZeroPolyMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"poly\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"}],\"name\":\"linearPolynomialEvaluation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"nextPowerOf2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"chunkNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"poly\",\"type\":\"bytes\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point\",\"name\":\"interpolationPoly\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point\",\"name\":\"revealProof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBN254.G2Point\",\"name\":\"zeroPoly\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"zeroPolyProof\",\"type\":\"bytes\"}],\"internalType\":\"structDataLayrChallengeUtils.MultiRevealProof\",\"name\":\"multiRevealProof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBN254.G2Point\",\"name\":\"polyEquivalenceProof\",\"type\":\"tuple\"}],\"name\":\"nonInteractivePolynomialProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point\",\"name\":\"c\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBN254.G2Point\",\"name\":\"pi\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"r\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"s\",\"type\":\"uint256\"}],\"name\":\"openPolynomialAtPoint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"value\",\"type\":\"uint32\"}],\"name\":\"reverseBits\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"length\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"value\",\"type\":\"uint32\"}],\"name\":\"reverseBitsLimited\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point\",\"name\":\"c\",\"type\":\"tuple\"},{\"internalType\":\"uint48\",\"name\":\"degree\",\"type\":\"uint48\"},{\"internalType\":\"uint32\",\"name\":\"numSys\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numPar\",\"type\":\"uint32\"}],\"internalType\":\"structDataLayrChallengeUtils.DataStoreKZGMetadata\",\"name\":\"dskzgMetadata\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"chunkNumber\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point\",\"name\":\"interpolationPoly\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point\",\"name\":\"revealProof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBN254.G2Point\",\"name\":\"zeroPoly\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"zeroPolyProof\",\"type\":\"bytes\"}],\"name\":\"validateDisclosureResponse\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"polys\",\"type\":\"bytes[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point[]\",\"name\":\"interpolationPolys\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBN254.G2Point\",\"name\":\"polyEquivalenceProof\",\"type\":\"tuple\"}],\"name\":\"verifyBatchPolyEquivalenceProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"poly\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN254.G1Point\",\"name\":\"interpolationPoly\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"structBN254.G2Point\",\"name\":\"polyEquivalenceProof\",\"type\":\"tuple\"}],\"name\":\"verifyPolyEquivalenceProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b50612b4e806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063b390282711610097578063caba41c911610066578063caba41c91461026f578063d51dd9dc14610282578063e34c39d614610295578063f07ac84a146102ae57600080fd5b8063b390282714610221578063b4a6a8f014610234578063c1e3286114610247578063c9f698e71461025c57600080fd5b80632a797870116100d35780632a797870146101895780636781cce3146101e857806399ae87ee146101fb578063a1b063f01461020e57600080fd5b80630e425d17146101055780630f4702321461012b57806329cc94b81461014e5780632a6fa69314610176575b600080fd5b610118610113366004611e11565b6102c1565b6040519081526020015b60405180910390f35b61013e610139366004611e9c565b6102ee565b6040519015158152602001610122565b61016161015c366004611f16565b610393565b60405163ffffffff9091168152602001610122565b610118610184366004611e11565b6103d4565b61019c610197366004611f49565b6106c8565b604080518251805182526020908101518183015283015165ffffffffffff16818301529082015163ffffffff90811660608084019190915290920151909116608082015260a001610122565b61013e6101f6366004611fce565b61073e565b61011861020936600461207f565b610a4b565b61013e61021c3660046120ca565b610acf565b61016161022f366004612189565b610bfc565b61013e610242366004612234565b610c4a565b61025a610255366004612279565b610dca565b005b61016161026a3660046122cf565b610ec1565b61013e61027d366004612312565b61101d565b61013e610290366004612480565b61145e565b6101616102a3366004611f49565b506084013560e01c90565b61025a6102bc366004612279565b6116fe565b600060015b82816001901b10156102e457806102dc8161258e565b9150506102c6565b6001901b92915050565b600080600080516020612af983398151915286866040516103109291906125a7565b6040805191829003822060208084019190915287359183019190915286013560608201526080016040516020818303038152906040528051906020012060001c61035a91906125cd565b90506000610369878784610a4b565b9050600061038761037f368890038801886125e1565b868585610c4a565b98975050505050505050565b6000806103a58463ffffffff1661177d565b6103b09060206125fd565b90508063ffffffff166103c284610bfc565b63ffffffff16901c9150505b92915050565b6000806103e08361177d565b90508060000361041257507fe82cea94884b1b895ea0742840a3b19249a723810fd1b04d8564d675b0a416f192915050565b8060010361044257507f4843774a80fc8385b31024f5bd18b42e62de439206ab9468d42d826796d41f6792915050565b8060020361047257507f092d3e5f87f5293e7ab0cc2ca6b0b5e4adb5e0011656544915f7cea34e69e5ab92915050565b806003036104a257507f494b208540ec8624fbbb3f2c64ffccdaf6253f8f4e50c0d93922d88195b0775592915050565b806004036104d257507ffdb44b84a82893cfa0e37a97f09ffc4298ad5e62be1bea1d03320ae836213d2292915050565b8060050361050257507f3f50cb08231d2a76853ba9dbb20dad45a1b75c57cdaff6223bfe069752cff3d492915050565b8060060361053257507fbb39eebd8138eefd5802a49d571e65b3e0d4e32277c28fbf5fbca66e7fb0431092915050565b8060070361056257507ff0a39b513e11fa80cbecbf352f69310eddd5cd03148768e0e9542bd600b133ec92915050565b8060080361059257507f038cca2238865414efb752cc004fffec9e6069b709f495249cdf36efbd5952f692915050565b806009036105c257507f2a26b054ed559dd255d8ac9060ebf6b95b768d87de767f8174ad2f9a4e48dd0192915050565b80600a036105f257507f1fe180d0bc4ff7c69fefa595b3b5f3c284535a280f6fdcf69b20770d1e20e1fc92915050565b80600b0361062257507f60e34ad57c61cd6fdd8177437c30e4a30334e63d7683989570cf27020efc820192915050565b80600c0361065257507feda2417e770ddbe88f083acf06b6794dfb76301314a32bd0697440d76f6cd9cc92915050565b80600d0361068257507f8cbe9b8cf92ce70e3bec8e1e72a0f85569017a7e43c3db50e4a5badb8dea7ce892915050565b60405162461bcd60e51b81526020600482015260166024820152754c6f67206e6f7420696e2076616c69642072616e676560501b60448201526064015b60405180910390fd5b506040805160c0810182526000608080830182815260a08401839052835260208084018390528385018390526060938401839052845180860186528635815286820135818301528551928301865282528585013560e090811c9183019190915260849095013590941c9284019290925282015290565b600080856001600160401b03811115610759576107596121a4565b604051908082528060200260200182016040528015610782578160200160208202803683370190505b50905060005b8681101561086a578787828181106107a2576107a2612622565b90506020028101906107b49190612638565b6040516107c29291906125a7565b60405180910390208686838181106107dc576107dc612622565b905060400201600001358787848181106107f8576107f8612622565b90506040020160200135604051602001610825939291909283526020830191909152604082015260600190565b6040516020818303038152906040528051906020012082828151811061084d5761084d612622565b6020908102919091010152806108628161258e565b915050610788565b506000600080516020612af98339815191528260405160200161088d91906126b1565b6040516020818303038152906040528051906020012060001c6108b091906125cd565b90506108ba611d7a565b600080516020612af98339815191528360006040516020016108dd9291906126bd565b6040516020818303038152906040528051906020012060001c61090091906125cd565b808252602082015260008787828161091a5761091a612622565b90506040020180360381019061093091906125e1565b905060006109628b8b600081811061094a5761094a612622565b905060200281019061095c9190612638565b86610a4b565b905060015b88811015610a2f576109ad836109a88c8c8581811061098857610988612622565b90506040020180360381019061099e91906125e1565b60208801516117e3565b611874565b925060006109de8d8d848181106109c6576109c6612622565b90506020028101906109d89190612638565b88610a4b565b9050600080516020612af98339815191528082876001602002015109840860208601518651919450600080516020612af9833981519152910960208601525080610a278161258e565b915050610967565b50610a3c82888684610c4a565b9b9a5050505050505050505050565b600080836001825b82811015610ac1576000888289610a6b8260206126d6565b92610a78939291906126ee565b610a8191612718565b9050600080516020612af98339815191528084830986089450600080516020612af98339815191528784099250610ab96020836126d6565b915050610a53565b5091925050505b9392505050565b600080610adc89896106c8565b9050610b0881888660408101610afa36839003830160808401612736565b6102906101008b018b612638565b610b245760405162461bcd60e51b81526004016106bf90612752565b60208101518590610b36906001612794565b610b419060206127be565b65ffffffffffff1614610b665760405162461bcd60e51b81526004016106bf906127ec565b6000600080516020612af98339815191528787604051610b879291906125a7565b6040805191829003822060208084019190915288359183019190915287013560608201526080016040516020818303038152906040528051906020012060001c610bd191906125cd565b90506000610be0888884610a4b565b9050610a3c610bf4368890038801886125e1565b868484610c4a565b600080805b6020811015610c43576001811b84811663ffffffff1615610c3057610c2782601f612849565b6001901b831792505b5080610c3b8161258e565b915050610c01565b5092915050565b60408051808201909152600181526002602082015260009081610c75610c6f83611909565b866117e3565b604080518082019091527f220ac48bb1f91fd93f502a3d0caa077ac70e0af8819b9d8fa26a168a2c558a5781527f08f54b82af08ceaf7cd5f180bac94870f6d8100a9c9afa9dd09a4491653891126020820152909150610cd58183611874565b91506000610ceb610ce585611909565b876117e3565b90506000610cf98a83611874565b604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d602083810191909152810191909152909150610a3c85610dc3368d90038d018d612736565b84846119a4565b610dd48180612860565b159050610ebc57610de58180612860565b905082148015610e21575082610dfb8280612860565b610e06600186612849565b818110610e1557610e15612622565b9050602002013560001c105b80610e4e575082610e328280612860565b84818110610e4257610e42612622565b9050602002013560001c115b610e6a5760405162461bcd60e51b81526004016106bf906128a9565b8115610ebc5782610e7b8280612860565b610e86600186612849565b818110610e9557610e95612622565b9050602002013560001c10610ebc5760405162461bcd60e51b81526004016106bf906128a9565b505050565b600080610ece838561292c565b90506000610ee18563ffffffff166102c1565b90506000610eef868461294b565b63ffffffff1615610f01576001610f04565b60005b60ff16610f11878561296e565b610f1b919061292c565b90506000610f37610f2c8385612991565b63ffffffff166102c1565b90508663ffffffff168863ffffffff161015610f795780610f58828a610393565b610f6490610100612991565b610f6e919061296e565b945050505050610ac8565b610f8387846125fd565b610f8d90826125fd565b63ffffffff168863ffffffff161015610fba5780610f588185610fb08b8d6125fd565b61015c919061292c565b60405162461bcd60e51b815260206004820152603260248201527f43616e6e6f7420637265617465206e756d626572206f66206672616d6520686960448201527167686572207468616e20706f737369626c6560701b60648201526084016106bf565b600080856001600160401b03811115611038576110386121a4565b604051908082528060200260200182016040528015611061578160200160208202803683370190505b50905060006110708b8b6106c8565b90508460005b8181101561129e576111418361108c838e61292c565b8a8a8581811061109e5761109e612622565b90506020028101906110b091906129b4565b8b8b868181106110c2576110c2612622565b90506020028101906110d491906129b4565b6040018c8c878181106110e9576110e9612622565b90506020028101906110fb91906129b4565b60800180360381019061110e9190612736565b8d8d8881811061112057611120612622565b905060200281019061113291906129b4565b61029090610100810190612638565b61115d5760405162461bcd60e51b81526004016106bf90612752565b89898281811061116f5761116f612622565b90506020028101906111819190612638565b90508360200151602061119491906127be565b65ffffffffffff16146111b95760405162461bcd60e51b81526004016106bf906127ec565b8989828181106111cb576111cb612622565b90506020028101906111dd9190612638565b6040516111eb9291906125a7565b604051809103902088888381811061120557611205612622565b905060200281019061121791906129b4565b3589898481811061122a5761122a612622565b905060200281019061123c91906129b4565b60405161126393929160209081013591019283526020830191909152604082015260600190565b6040516020818303038152906040528051906020012084828151811061128b5761128b612622565b6020908102919091010152600101611076565b506000600080516020612af9833981519152846040516020016112c191906126b1565b6040516020818303038152906040528051906020012060001c6112e491906125cd565b90506112ee611d7a565b600080516020612af98339815191528560006040516020016113119291906126bd565b6040516020818303038152906040528051906020012060001c61133491906125cd565b808252602082015260008989828161134e5761134e612622565b905060200281019061136091906129b4565b61137090368190038101906125e1565b9050600061138a8d8d600081811061094a5761094a612622565b905060015b8a81101561143c576113d2836109a88e8e858181106113b0576113b0612622565b90506020028101906113c291906129b4565b61099e90368190038101906125e1565b925060006113eb8f8f848181106109c6576109c6612622565b9050600080516020612af98339815191528082876001602002015109840860208601518651919450600080516020612af98339815191529109602086015250806114348161258e565b91505061138f565b50611449828a8684610c4a565b97505050505050505098975050505050505050565b6000805461146d6020846129d5565b146114f95760405162461bcd60e51b815260206004820152605060248201527f446174614c6179724368616c6c656e67655574696c732e76616c69646174654460448201527f6973636c6f73757265526573706f6e73653a20696e636f7272656374206d657260648201526f0d6d8ca40e0e4dedecc40d8cadccee8d60831b608482015260a4016106bf565b8351602080820151915181870151808301519051604080519485019590955293830191909152606082015260808101919091526115b39060a0016040516020818303038152906040528051906020012061155c898b604001518c60600151610ec1565b63ffffffff166115778b6020015165ffffffffffff166103d4565b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c1292505050565b6115ff5760405162461bcd60e51b815260206004820181905260248201527f496e636f7272656374207a65726f20706f6c79206d65726b6c652070726f6f6660448201526064016106bf565b875160009061161f906109a861161a368b90038b018b6125e1565b611909565b604080516080810182527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28183019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6060830152815281518083019092527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec82527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d6020838101919091528101919091529091506116f06116e8368990038901896125e1565b8784846119a4565b9a9950505050505050505050565b6117088180612860565b8381811061171857611718612622565b905060200201358314610ebc5760405162461bcd60e51b815260206004820152602760248201527f6f70657261746f72206e6f7420696e636c7564656420696e206e6f6e2d7369676044820152661b995c881cd95d60ca1b60648201526084016106bf565b60008082116117c45760405162461bcd60e51b8152602060048201526013602482015272131bd9c81b5d5cdd081899481919599a5b9959606a1b60448201526064016106bf565b60005b600183821c146103ce57806117db8161258e565b9150506117c7565b60408051808201909152600080825260208201526117ff611d98565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa9050808061182e57fe5b508061186c5760405162461bcd60e51b815260206004820152600d60248201526c1958cb5b5d5b0b59985a5b1959609a1b60448201526064016106bf565b505092915050565b6040805180820190915260008082526020820152611890611db6565b835181526020808501518183015283516040808401919091529084015160608301526000908360808460066107d05a03fa905080806118cb57fe5b508061186c5760405162461bcd60e51b815260206004820152600d60248201526c1958cb5859190b59985a5b1959609a1b60448201526064016106bf565b6040805180820190915260008082526020820152815115801561192e57506020820151155b1561194c575050604080518082019091526000808252602082015290565b604051806040016040528083600001518152602001600080516020612af9833981519152846020015161197f91906125cd565b61199790600080516020612af9833981519152612849565b905292915050565b919050565b6040805180820182528581526020808201859052825180840190935285835282018390526000916119d3611dd4565b60005b6002811015611b985760006119ec8260066129e9565b9050848260028110611a0057611a00612622565b60200201515183611a128360006126d6565b600c8110611a2257611a22612622565b6020020152848260028110611a3957611a39612622565b60200201516020015183826001611a5091906126d6565b600c8110611a6057611a60612622565b6020020152838260028110611a7757611a77612622565b6020020151515183611a8a8360026126d6565b600c8110611a9a57611a9a612622565b6020020152838260028110611ab157611ab1612622565b6020020151516001602002015183611aca8360036126d6565b600c8110611ada57611ada612622565b6020020152838260028110611af157611af1612622565b602002015160200151600060028110611b0c57611b0c612622565b602002015183611b1d8360046126d6565b600c8110611b2d57611b2d612622565b6020020152838260028110611b4457611b44612622565b602002015160200151600160028110611b5f57611b5f612622565b602002015183611b708360056126d6565b600c8110611b8057611b80612622565b60200201525080611b908161258e565b9150506119d6565b50611ba1611df3565b60006020826101808560086107d05a03fa90508080611bbc57fe5b5080611c025760405162461bcd60e51b81526020600482015260156024820152741c185a5c9a5b99cb5bdc18dbd9194b59985a5b1959605a1b60448201526064016106bf565b5051151598975050505050505050565b600060208251611c2291906125cd565b15611c665760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b60448201526064016106bf565b600060208351611c7691906129d5565b9050611c83816002612aec565b8510611cc95760405162461bcd60e51b81526020600482015260156024820152744c65616620696e64657820697320746f6f2062696760581b60448201526064016106bf565b60008660205b85518111611d6c57858101519250611ce86002896125cd565b600003611d20576040805160208101849052908101849052606001604051602081830303815290604052805190602001209150611d4d565b60408051602081018590529081018390526060016040516020818303038152906040528051906020012091505b611d586002896129d5565b9750611d656020826126d6565b9050611ccf565b509094149695505050505050565b60405180604001604052806002906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b604051806101800160405280600c906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b600060208284031215611e2357600080fd5b5035919050565b60008083601f840112611e3c57600080fd5b5081356001600160401b03811115611e5357600080fd5b602083019150836020828501011115611e6b57600080fd5b9250929050565b600060408284031215611e8457600080fd5b50919050565b600060808284031215611e8457600080fd5b60008060008060e08587031215611eb257600080fd5b84356001600160401b03811115611ec857600080fd5b611ed487828801611e2a565b9095509350611ee890508660208701611e72565b9150611ef78660608701611e8a565b905092959194509250565b803563ffffffff8116811461199f57600080fd5b60008060408385031215611f2957600080fd5b611f3283611f02565b9150611f4060208401611f02565b90509250929050565b60008060208385031215611f5c57600080fd5b82356001600160401b03811115611f7257600080fd5b611f7e85828601611e2a565b90969095509350505050565b60008083601f840112611f9c57600080fd5b5081356001600160401b03811115611fb357600080fd5b6020830191508360208260051b8501011115611e6b57600080fd5b600080600080600060c08688031215611fe657600080fd5b85356001600160401b0380821115611ffd57600080fd5b61200989838a01611f8a565b9097509550602088013591508082111561202257600080fd5b818801915088601f83011261203657600080fd5b81358181111561204557600080fd5b8960208260061b850101111561205a57600080fd5b6020830195508094505050506120738760408801611e8a565b90509295509295909350565b60008060006040848603121561209457600080fd5b83356001600160401b038111156120aa57600080fd5b6120b686828701611e2a565b909790965060209590950135949350505050565b6000806000806000806000610100888a0312156120e657600080fd5b87356001600160401b03808211156120fd57600080fd5b6121098b838c01611e2a565b909950975087915061211d60208b01611f02565b965060408a013591508082111561213357600080fd5b61213f8b838c01611e2a565b909650945060608a013591508082111561215857600080fd5b508801610120818b03121561216c57600080fd5b915061217b8960808a01611e8a565b905092959891949750929550565b60006020828403121561219b57600080fd5b610ac882611f02565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156121dc576121dc6121a4565b60405290565b604051608081016001600160401b03811182821017156121dc576121dc6121a4565b60006040828403121561221657600080fd5b61221e6121ba565b9050813581526020820135602082015292915050565b600080600080610100858703121561224b57600080fd5b6122558686612204565b93506122648660408701611e8a565b939693955050505060c08201359160e0013590565b60008060006060848603121561228e57600080fd5b833592506020840135915060408401356001600160401b038111156122b257600080fd5b8401606081870312156122c457600080fd5b809150509250925092565b6000806000606084860312156122e457600080fd5b6122ed84611f02565b92506122fb60208501611f02565b915061230960408501611f02565b90509250925092565b600080600080600080600080610100898b03121561232f57600080fd5b88356001600160401b038082111561234657600080fd5b6123528c838d01611e2a565b909a50985088915061236660208c01611f02565b975060408b013591508082111561237c57600080fd5b6123888c838d01611f8a565b909750955060608b01359150808211156123a157600080fd5b506123ae8b828c01611f8a565b90945092506123c290508a60808b01611e8a565b90509295985092959890939650565b600082601f8301126123e257600080fd5b604051604081018181106001600160401b0382111715612404576124046121a4565b806040525080604084018581111561241b57600080fd5b845b8181101561243557803583526020928301920161241d565b509195945050505050565b60006080828403121561245257600080fd5b61245a6121ba565b905061246683836123d1565b815261247583604084016123d1565b602082015292915050565b60008060008060008060008789036101e081121561249d57600080fd5b60a08112156124ab57600080fd5b506124b46121e2565b6124be8a8a612204565b8152604089013565ffffffffffff811681146124d957600080fd5b60208201526124ea60608a01611f02565b60408201526124fb60808a01611f02565b6060820152965061250e60a08901611f02565b955061251d8960c08a01611e72565b945061252d896101008a01611e72565b935061253d896101408a01612440565b92506101c08801356001600160401b0381111561255957600080fd5b6125658a828b01611e2a565b989b979a50959850939692959293505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016125a0576125a0612578565b5060010190565b8183823760009101908152919050565b634e487b7160e01b600052601260045260246000fd5b6000826125dc576125dc6125b7565b500690565b6000604082840312156125f357600080fd5b610ac88383612204565b600063ffffffff8381169083168181101561261a5761261a612578565b039392505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261264f57600080fd5b8301803591506001600160401b0382111561266957600080fd5b602001915036819003821315611e6b57600080fd5b60008151602080840160005b838110156126a65781518752958201959082019060010161268a565b509495945050505050565b6000610ac8828461267e565b60006126c9828561267e565b9283525050602001919050565b600082198211156126e9576126e9612578565b500190565b600080858511156126fe57600080fd5b8386111561270b57600080fd5b5050820193919092039150565b803560208310156103ce57600019602084900360031b1b1692915050565b60006080828403121561274857600080fd5b610ac88383612440565b60208082526022908201527f52657665616c206661696c65642064756520746f206e6f6e20312070616972696040820152616e6760f01b606082015260800190565b600065ffffffffffff8083168185168083038211156127b5576127b5612578565b01949350505050565b600065ffffffffffff808316818516818304811182151516156127e3576127e3612578565b02949350505050565b60208082526038908201527f506f6c796e6f6d69616c206d757374206861766520612032353620626974206360408201527f6f656666696369656e7420666f722065616368207465726d0000000000000000606082015260800190565b60008282101561285b5761285b612578565b500390565b6000808335601e1984360301811261287757600080fd5b8301803591506001600160401b0382111561289157600080fd5b6020019150600581901b3603821315611e6b57600080fd5b6020808252605c908201527f446174614c6179724368616c6c656e67655574696c732e636865636b4578636c60408201527f7573696f6e46726f6d4e6f6e5369676e65725365743a2050726f76696465642060608201527f6e6f6e7369676e657220696e64657820697320696e636f727265637400000000608082015260a00190565b600063ffffffff8083168185168083038211156127b5576127b5612578565b600063ffffffff80841680612962576129626125b7565b92169190910692915050565b600063ffffffff80841680612985576129856125b7565b92169190910492915050565b600063ffffffff808316818516818304811182151516156127e3576127e3612578565b6000823561011e198336030181126129cb57600080fd5b9190910192915050565b6000826129e4576129e46125b7565b500490565b6000816000190483118215151615612a0357612a03612578565b500290565b600181815b80851115612a43578160001904821115612a2957612a29612578565b80851615612a3657918102915b93841c9390800290612a0d565b509250929050565b600082612a5a575060016103ce565b81612a67575060006103ce565b8160018114612a7d5760028114612a8757612aa3565b60019150506103ce565b60ff841115612a9857612a98612578565b50506001821b6103ce565b5060208310610133831016604e8410600b8410161715612ac6575081810a6103ce565b612ad08383612a08565b8060001904821115612ae457612ae4612578565b029392505050565b6000610ac88383612a4b56fe30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47a2646970667358221220e80e2113f633ca2277dd8d1fd323d039a29ba98beb649a6006b441d81d9b4b6f64736f6c634300080f0033",
}

// ContractDataLayrChallengeUtilsABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractDataLayrChallengeUtilsMetaData.ABI instead.
var ContractDataLayrChallengeUtilsABI = ContractDataLayrChallengeUtilsMetaData.ABI

// ContractDataLayrChallengeUtilsBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractDataLayrChallengeUtilsMetaData.Bin instead.
var ContractDataLayrChallengeUtilsBin = ContractDataLayrChallengeUtilsMetaData.Bin

// DeployContractDataLayrChallengeUtils deploys a new Ethereum contract, binding an instance of ContractDataLayrChallengeUtils to it.
func DeployContractDataLayrChallengeUtils(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *ContractDataLayrChallengeUtils, error) {
	parsed, err := ContractDataLayrChallengeUtilsMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractDataLayrChallengeUtilsBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractDataLayrChallengeUtils{ContractDataLayrChallengeUtilsCaller: ContractDataLayrChallengeUtilsCaller{contract: contract}, ContractDataLayrChallengeUtilsTransactor: ContractDataLayrChallengeUtilsTransactor{contract: contract}, ContractDataLayrChallengeUtilsFilterer: ContractDataLayrChallengeUtilsFilterer{contract: contract}}, nil
}

// ContractDataLayrChallengeUtils is an auto generated Go binding around an Ethereum contract.
type ContractDataLayrChallengeUtils struct {
	ContractDataLayrChallengeUtilsCaller     // Read-only binding to the contract
	ContractDataLayrChallengeUtilsTransactor // Write-only binding to the contract
	ContractDataLayrChallengeUtilsFilterer   // Log filterer for contract events
}

// ContractDataLayrChallengeUtilsCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractDataLayrChallengeUtilsCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractDataLayrChallengeUtilsTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractDataLayrChallengeUtilsTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractDataLayrChallengeUtilsFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractDataLayrChallengeUtilsFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractDataLayrChallengeUtilsSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractDataLayrChallengeUtilsSession struct {
	Contract     *ContractDataLayrChallengeUtils // Generic contract binding to set the session for
	CallOpts     bind.CallOpts                   // Call options to use throughout this session
	TransactOpts bind.TransactOpts               // Transaction auth options to use throughout this session
}

// ContractDataLayrChallengeUtilsCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractDataLayrChallengeUtilsCallerSession struct {
	Contract *ContractDataLayrChallengeUtilsCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                         // Call options to use throughout this session
}

// ContractDataLayrChallengeUtilsTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractDataLayrChallengeUtilsTransactorSession struct {
	Contract     *ContractDataLayrChallengeUtilsTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                         // Transaction auth options to use throughout this session
}

// ContractDataLayrChallengeUtilsRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractDataLayrChallengeUtilsRaw struct {
	Contract *ContractDataLayrChallengeUtils // Generic contract binding to access the raw methods on
}

// ContractDataLayrChallengeUtilsCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractDataLayrChallengeUtilsCallerRaw struct {
	Contract *ContractDataLayrChallengeUtilsCaller // Generic read-only contract binding to access the raw methods on
}

// ContractDataLayrChallengeUtilsTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractDataLayrChallengeUtilsTransactorRaw struct {
	Contract *ContractDataLayrChallengeUtilsTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractDataLayrChallengeUtils creates a new instance of ContractDataLayrChallengeUtils, bound to a specific deployed contract.
func NewContractDataLayrChallengeUtils(address common.Address, backend bind.ContractBackend) (*ContractDataLayrChallengeUtils, error) {
	contract, err := bindContractDataLayrChallengeUtils(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractDataLayrChallengeUtils{ContractDataLayrChallengeUtilsCaller: ContractDataLayrChallengeUtilsCaller{contract: contract}, ContractDataLayrChallengeUtilsTransactor: ContractDataLayrChallengeUtilsTransactor{contract: contract}, ContractDataLayrChallengeUtilsFilterer: ContractDataLayrChallengeUtilsFilterer{contract: contract}}, nil
}

// NewContractDataLayrChallengeUtilsCaller creates a new read-only instance of ContractDataLayrChallengeUtils, bound to a specific deployed contract.
func NewContractDataLayrChallengeUtilsCaller(address common.Address, caller bind.ContractCaller) (*ContractDataLayrChallengeUtilsCaller, error) {
	contract, err := bindContractDataLayrChallengeUtils(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractDataLayrChallengeUtilsCaller{contract: contract}, nil
}

// NewContractDataLayrChallengeUtilsTransactor creates a new write-only instance of ContractDataLayrChallengeUtils, bound to a specific deployed contract.
func NewContractDataLayrChallengeUtilsTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractDataLayrChallengeUtilsTransactor, error) {
	contract, err := bindContractDataLayrChallengeUtils(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractDataLayrChallengeUtilsTransactor{contract: contract}, nil
}

// NewContractDataLayrChallengeUtilsFilterer creates a new log filterer instance of ContractDataLayrChallengeUtils, bound to a specific deployed contract.
func NewContractDataLayrChallengeUtilsFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractDataLayrChallengeUtilsFilterer, error) {
	contract, err := bindContractDataLayrChallengeUtils(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractDataLayrChallengeUtilsFilterer{contract: contract}, nil
}

// bindContractDataLayrChallengeUtils binds a generic wrapper to an already deployed contract.
func bindContractDataLayrChallengeUtils(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ContractDataLayrChallengeUtilsABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractDataLayrChallengeUtils.Contract.ContractDataLayrChallengeUtilsCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractDataLayrChallengeUtils.Contract.ContractDataLayrChallengeUtilsTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractDataLayrChallengeUtils.Contract.ContractDataLayrChallengeUtilsTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractDataLayrChallengeUtils.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractDataLayrChallengeUtils.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractDataLayrChallengeUtils.Contract.contract.Transact(opts, method, params...)
}

// BatchNonInteractivePolynomialProofs is a free data retrieval call binding the contract method 0xcaba41c9.
//
// Solidity: function batchNonInteractivePolynomialProofs(bytes header, uint32 firstChunkNumber, bytes[] polys, ((uint256,uint256),(uint256,uint256),(uint256[2],uint256[2]),bytes)[] multiRevealProofs, (uint256[2],uint256[2]) polyEquivalenceProof) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) BatchNonInteractivePolynomialProofs(opts *bind.CallOpts, header []byte, firstChunkNumber uint32, polys [][]byte, multiRevealProofs []DataLayrChallengeUtilsMultiRevealProof, polyEquivalenceProof BN254G2Point) (bool, error) {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "batchNonInteractivePolynomialProofs", header, firstChunkNumber, polys, multiRevealProofs, polyEquivalenceProof)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// BatchNonInteractivePolynomialProofs is a free data retrieval call binding the contract method 0xcaba41c9.
//
// Solidity: function batchNonInteractivePolynomialProofs(bytes header, uint32 firstChunkNumber, bytes[] polys, ((uint256,uint256),(uint256,uint256),(uint256[2],uint256[2]),bytes)[] multiRevealProofs, (uint256[2],uint256[2]) polyEquivalenceProof) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) BatchNonInteractivePolynomialProofs(header []byte, firstChunkNumber uint32, polys [][]byte, multiRevealProofs []DataLayrChallengeUtilsMultiRevealProof, polyEquivalenceProof BN254G2Point) (bool, error) {
	return _ContractDataLayrChallengeUtils.Contract.BatchNonInteractivePolynomialProofs(&_ContractDataLayrChallengeUtils.CallOpts, header, firstChunkNumber, polys, multiRevealProofs, polyEquivalenceProof)
}

// BatchNonInteractivePolynomialProofs is a free data retrieval call binding the contract method 0xcaba41c9.
//
// Solidity: function batchNonInteractivePolynomialProofs(bytes header, uint32 firstChunkNumber, bytes[] polys, ((uint256,uint256),(uint256,uint256),(uint256[2],uint256[2]),bytes)[] multiRevealProofs, (uint256[2],uint256[2]) polyEquivalenceProof) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) BatchNonInteractivePolynomialProofs(header []byte, firstChunkNumber uint32, polys [][]byte, multiRevealProofs []DataLayrChallengeUtilsMultiRevealProof, polyEquivalenceProof BN254G2Point) (bool, error) {
	return _ContractDataLayrChallengeUtils.Contract.BatchNonInteractivePolynomialProofs(&_ContractDataLayrChallengeUtils.CallOpts, header, firstChunkNumber, polys, multiRevealProofs, polyEquivalenceProof)
}

// CheckExclusionFromNonSignerSet is a free data retrieval call binding the contract method 0xc1e32861.
//
// Solidity: function checkExclusionFromNonSignerSet(bytes32 operatorPubkeyHash, uint256 nonSignerIndex, (bytes32[],uint256,uint256) signatoryRecord) pure returns()
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) CheckExclusionFromNonSignerSet(opts *bind.CallOpts, operatorPubkeyHash [32]byte, nonSignerIndex *big.Int, signatoryRecord IDataLayrServiceManagerSignatoryRecordMinusDataStoreId) error {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "checkExclusionFromNonSignerSet", operatorPubkeyHash, nonSignerIndex, signatoryRecord)

	if err != nil {
		return err
	}

	return err

}

// CheckExclusionFromNonSignerSet is a free data retrieval call binding the contract method 0xc1e32861.
//
// Solidity: function checkExclusionFromNonSignerSet(bytes32 operatorPubkeyHash, uint256 nonSignerIndex, (bytes32[],uint256,uint256) signatoryRecord) pure returns()
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) CheckExclusionFromNonSignerSet(operatorPubkeyHash [32]byte, nonSignerIndex *big.Int, signatoryRecord IDataLayrServiceManagerSignatoryRecordMinusDataStoreId) error {
	return _ContractDataLayrChallengeUtils.Contract.CheckExclusionFromNonSignerSet(&_ContractDataLayrChallengeUtils.CallOpts, operatorPubkeyHash, nonSignerIndex, signatoryRecord)
}

// CheckExclusionFromNonSignerSet is a free data retrieval call binding the contract method 0xc1e32861.
//
// Solidity: function checkExclusionFromNonSignerSet(bytes32 operatorPubkeyHash, uint256 nonSignerIndex, (bytes32[],uint256,uint256) signatoryRecord) pure returns()
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) CheckExclusionFromNonSignerSet(operatorPubkeyHash [32]byte, nonSignerIndex *big.Int, signatoryRecord IDataLayrServiceManagerSignatoryRecordMinusDataStoreId) error {
	return _ContractDataLayrChallengeUtils.Contract.CheckExclusionFromNonSignerSet(&_ContractDataLayrChallengeUtils.CallOpts, operatorPubkeyHash, nonSignerIndex, signatoryRecord)
}

// CheckInclusionInNonSignerSet is a free data retrieval call binding the contract method 0xf07ac84a.
//
// Solidity: function checkInclusionInNonSignerSet(bytes32 operatorPubkeyHash, uint256 nonSignerIndex, (bytes32[],uint256,uint256) signatoryRecord) pure returns()
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) CheckInclusionInNonSignerSet(opts *bind.CallOpts, operatorPubkeyHash [32]byte, nonSignerIndex *big.Int, signatoryRecord IDataLayrServiceManagerSignatoryRecordMinusDataStoreId) error {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "checkInclusionInNonSignerSet", operatorPubkeyHash, nonSignerIndex, signatoryRecord)

	if err != nil {
		return err
	}

	return err

}

// CheckInclusionInNonSignerSet is a free data retrieval call binding the contract method 0xf07ac84a.
//
// Solidity: function checkInclusionInNonSignerSet(bytes32 operatorPubkeyHash, uint256 nonSignerIndex, (bytes32[],uint256,uint256) signatoryRecord) pure returns()
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) CheckInclusionInNonSignerSet(operatorPubkeyHash [32]byte, nonSignerIndex *big.Int, signatoryRecord IDataLayrServiceManagerSignatoryRecordMinusDataStoreId) error {
	return _ContractDataLayrChallengeUtils.Contract.CheckInclusionInNonSignerSet(&_ContractDataLayrChallengeUtils.CallOpts, operatorPubkeyHash, nonSignerIndex, signatoryRecord)
}

// CheckInclusionInNonSignerSet is a free data retrieval call binding the contract method 0xf07ac84a.
//
// Solidity: function checkInclusionInNonSignerSet(bytes32 operatorPubkeyHash, uint256 nonSignerIndex, (bytes32[],uint256,uint256) signatoryRecord) pure returns()
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) CheckInclusionInNonSignerSet(operatorPubkeyHash [32]byte, nonSignerIndex *big.Int, signatoryRecord IDataLayrServiceManagerSignatoryRecordMinusDataStoreId) error {
	return _ContractDataLayrChallengeUtils.Contract.CheckInclusionInNonSignerSet(&_ContractDataLayrChallengeUtils.CallOpts, operatorPubkeyHash, nonSignerIndex, signatoryRecord)
}

// GetDataCommitmentAndMultirevealDegreeAndSymbolBreakdownFromHeader is a free data retrieval call binding the contract method 0x2a797870.
//
// Solidity: function getDataCommitmentAndMultirevealDegreeAndSymbolBreakdownFromHeader(bytes header) pure returns(((uint256,uint256),uint48,uint32,uint32))
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) GetDataCommitmentAndMultirevealDegreeAndSymbolBreakdownFromHeader(opts *bind.CallOpts, header []byte) (DataLayrChallengeUtilsDataStoreKZGMetadata, error) {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "getDataCommitmentAndMultirevealDegreeAndSymbolBreakdownFromHeader", header)

	if err != nil {
		return *new(DataLayrChallengeUtilsDataStoreKZGMetadata), err
	}

	out0 := *abi.ConvertType(out[0], new(DataLayrChallengeUtilsDataStoreKZGMetadata)).(*DataLayrChallengeUtilsDataStoreKZGMetadata)

	return out0, err

}

// GetDataCommitmentAndMultirevealDegreeAndSymbolBreakdownFromHeader is a free data retrieval call binding the contract method 0x2a797870.
//
// Solidity: function getDataCommitmentAndMultirevealDegreeAndSymbolBreakdownFromHeader(bytes header) pure returns(((uint256,uint256),uint48,uint32,uint32))
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) GetDataCommitmentAndMultirevealDegreeAndSymbolBreakdownFromHeader(header []byte) (DataLayrChallengeUtilsDataStoreKZGMetadata, error) {
	return _ContractDataLayrChallengeUtils.Contract.GetDataCommitmentAndMultirevealDegreeAndSymbolBreakdownFromHeader(&_ContractDataLayrChallengeUtils.CallOpts, header)
}

// GetDataCommitmentAndMultirevealDegreeAndSymbolBreakdownFromHeader is a free data retrieval call binding the contract method 0x2a797870.
//
// Solidity: function getDataCommitmentAndMultirevealDegreeAndSymbolBreakdownFromHeader(bytes header) pure returns(((uint256,uint256),uint48,uint32,uint32))
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) GetDataCommitmentAndMultirevealDegreeAndSymbolBreakdownFromHeader(header []byte) (DataLayrChallengeUtilsDataStoreKZGMetadata, error) {
	return _ContractDataLayrChallengeUtils.Contract.GetDataCommitmentAndMultirevealDegreeAndSymbolBreakdownFromHeader(&_ContractDataLayrChallengeUtils.CallOpts, header)
}

// GetLeadingCosetIndexFromHighestRootOfUnity is a free data retrieval call binding the contract method 0xc9f698e7.
//
// Solidity: function getLeadingCosetIndexFromHighestRootOfUnity(uint32 i, uint32 numSys, uint32 numPar) pure returns(uint32)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) GetLeadingCosetIndexFromHighestRootOfUnity(opts *bind.CallOpts, i uint32, numSys uint32, numPar uint32) (uint32, error) {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "getLeadingCosetIndexFromHighestRootOfUnity", i, numSys, numPar)

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GetLeadingCosetIndexFromHighestRootOfUnity is a free data retrieval call binding the contract method 0xc9f698e7.
//
// Solidity: function getLeadingCosetIndexFromHighestRootOfUnity(uint32 i, uint32 numSys, uint32 numPar) pure returns(uint32)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) GetLeadingCosetIndexFromHighestRootOfUnity(i uint32, numSys uint32, numPar uint32) (uint32, error) {
	return _ContractDataLayrChallengeUtils.Contract.GetLeadingCosetIndexFromHighestRootOfUnity(&_ContractDataLayrChallengeUtils.CallOpts, i, numSys, numPar)
}

// GetLeadingCosetIndexFromHighestRootOfUnity is a free data retrieval call binding the contract method 0xc9f698e7.
//
// Solidity: function getLeadingCosetIndexFromHighestRootOfUnity(uint32 i, uint32 numSys, uint32 numPar) pure returns(uint32)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) GetLeadingCosetIndexFromHighestRootOfUnity(i uint32, numSys uint32, numPar uint32) (uint32, error) {
	return _ContractDataLayrChallengeUtils.Contract.GetLeadingCosetIndexFromHighestRootOfUnity(&_ContractDataLayrChallengeUtils.CallOpts, i, numSys, numPar)
}

// GetNumSysFromHeader is a free data retrieval call binding the contract method 0xe34c39d6.
//
// Solidity: function getNumSysFromHeader(bytes header) pure returns(uint32)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) GetNumSysFromHeader(opts *bind.CallOpts, header []byte) (uint32, error) {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "getNumSysFromHeader", header)

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// GetNumSysFromHeader is a free data retrieval call binding the contract method 0xe34c39d6.
//
// Solidity: function getNumSysFromHeader(bytes header) pure returns(uint32)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) GetNumSysFromHeader(header []byte) (uint32, error) {
	return _ContractDataLayrChallengeUtils.Contract.GetNumSysFromHeader(&_ContractDataLayrChallengeUtils.CallOpts, header)
}

// GetNumSysFromHeader is a free data retrieval call binding the contract method 0xe34c39d6.
//
// Solidity: function getNumSysFromHeader(bytes header) pure returns(uint32)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) GetNumSysFromHeader(header []byte) (uint32, error) {
	return _ContractDataLayrChallengeUtils.Contract.GetNumSysFromHeader(&_ContractDataLayrChallengeUtils.CallOpts, header)
}

// GetZeroPolyMerkleRoot is a free data retrieval call binding the contract method 0x2a6fa693.
//
// Solidity: function getZeroPolyMerkleRoot(uint256 degree) pure returns(bytes32)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) GetZeroPolyMerkleRoot(opts *bind.CallOpts, degree *big.Int) ([32]byte, error) {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "getZeroPolyMerkleRoot", degree)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetZeroPolyMerkleRoot is a free data retrieval call binding the contract method 0x2a6fa693.
//
// Solidity: function getZeroPolyMerkleRoot(uint256 degree) pure returns(bytes32)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) GetZeroPolyMerkleRoot(degree *big.Int) ([32]byte, error) {
	return _ContractDataLayrChallengeUtils.Contract.GetZeroPolyMerkleRoot(&_ContractDataLayrChallengeUtils.CallOpts, degree)
}

// GetZeroPolyMerkleRoot is a free data retrieval call binding the contract method 0x2a6fa693.
//
// Solidity: function getZeroPolyMerkleRoot(uint256 degree) pure returns(bytes32)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) GetZeroPolyMerkleRoot(degree *big.Int) ([32]byte, error) {
	return _ContractDataLayrChallengeUtils.Contract.GetZeroPolyMerkleRoot(&_ContractDataLayrChallengeUtils.CallOpts, degree)
}

// LinearPolynomialEvaluation is a free data retrieval call binding the contract method 0x99ae87ee.
//
// Solidity: function linearPolynomialEvaluation(bytes poly, uint256 r) pure returns(uint256)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) LinearPolynomialEvaluation(opts *bind.CallOpts, poly []byte, r *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "linearPolynomialEvaluation", poly, r)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// LinearPolynomialEvaluation is a free data retrieval call binding the contract method 0x99ae87ee.
//
// Solidity: function linearPolynomialEvaluation(bytes poly, uint256 r) pure returns(uint256)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) LinearPolynomialEvaluation(poly []byte, r *big.Int) (*big.Int, error) {
	return _ContractDataLayrChallengeUtils.Contract.LinearPolynomialEvaluation(&_ContractDataLayrChallengeUtils.CallOpts, poly, r)
}

// LinearPolynomialEvaluation is a free data retrieval call binding the contract method 0x99ae87ee.
//
// Solidity: function linearPolynomialEvaluation(bytes poly, uint256 r) pure returns(uint256)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) LinearPolynomialEvaluation(poly []byte, r *big.Int) (*big.Int, error) {
	return _ContractDataLayrChallengeUtils.Contract.LinearPolynomialEvaluation(&_ContractDataLayrChallengeUtils.CallOpts, poly, r)
}

// NextPowerOf2 is a free data retrieval call binding the contract method 0x0e425d17.
//
// Solidity: function nextPowerOf2(uint256 n) pure returns(uint256)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) NextPowerOf2(opts *bind.CallOpts, n *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "nextPowerOf2", n)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// NextPowerOf2 is a free data retrieval call binding the contract method 0x0e425d17.
//
// Solidity: function nextPowerOf2(uint256 n) pure returns(uint256)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) NextPowerOf2(n *big.Int) (*big.Int, error) {
	return _ContractDataLayrChallengeUtils.Contract.NextPowerOf2(&_ContractDataLayrChallengeUtils.CallOpts, n)
}

// NextPowerOf2 is a free data retrieval call binding the contract method 0x0e425d17.
//
// Solidity: function nextPowerOf2(uint256 n) pure returns(uint256)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) NextPowerOf2(n *big.Int) (*big.Int, error) {
	return _ContractDataLayrChallengeUtils.Contract.NextPowerOf2(&_ContractDataLayrChallengeUtils.CallOpts, n)
}

// NonInteractivePolynomialProof is a free data retrieval call binding the contract method 0xa1b063f0.
//
// Solidity: function nonInteractivePolynomialProof(bytes header, uint32 chunkNumber, bytes poly, ((uint256,uint256),(uint256,uint256),(uint256[2],uint256[2]),bytes) multiRevealProof, (uint256[2],uint256[2]) polyEquivalenceProof) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) NonInteractivePolynomialProof(opts *bind.CallOpts, header []byte, chunkNumber uint32, poly []byte, multiRevealProof DataLayrChallengeUtilsMultiRevealProof, polyEquivalenceProof BN254G2Point) (bool, error) {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "nonInteractivePolynomialProof", header, chunkNumber, poly, multiRevealProof, polyEquivalenceProof)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// NonInteractivePolynomialProof is a free data retrieval call binding the contract method 0xa1b063f0.
//
// Solidity: function nonInteractivePolynomialProof(bytes header, uint32 chunkNumber, bytes poly, ((uint256,uint256),(uint256,uint256),(uint256[2],uint256[2]),bytes) multiRevealProof, (uint256[2],uint256[2]) polyEquivalenceProof) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) NonInteractivePolynomialProof(header []byte, chunkNumber uint32, poly []byte, multiRevealProof DataLayrChallengeUtilsMultiRevealProof, polyEquivalenceProof BN254G2Point) (bool, error) {
	return _ContractDataLayrChallengeUtils.Contract.NonInteractivePolynomialProof(&_ContractDataLayrChallengeUtils.CallOpts, header, chunkNumber, poly, multiRevealProof, polyEquivalenceProof)
}

// NonInteractivePolynomialProof is a free data retrieval call binding the contract method 0xa1b063f0.
//
// Solidity: function nonInteractivePolynomialProof(bytes header, uint32 chunkNumber, bytes poly, ((uint256,uint256),(uint256,uint256),(uint256[2],uint256[2]),bytes) multiRevealProof, (uint256[2],uint256[2]) polyEquivalenceProof) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) NonInteractivePolynomialProof(header []byte, chunkNumber uint32, poly []byte, multiRevealProof DataLayrChallengeUtilsMultiRevealProof, polyEquivalenceProof BN254G2Point) (bool, error) {
	return _ContractDataLayrChallengeUtils.Contract.NonInteractivePolynomialProof(&_ContractDataLayrChallengeUtils.CallOpts, header, chunkNumber, poly, multiRevealProof, polyEquivalenceProof)
}

// OpenPolynomialAtPoint is a free data retrieval call binding the contract method 0xb4a6a8f0.
//
// Solidity: function openPolynomialAtPoint((uint256,uint256) c, (uint256[2],uint256[2]) pi, uint256 r, uint256 s) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) OpenPolynomialAtPoint(opts *bind.CallOpts, c BN254G1Point, pi BN254G2Point, r *big.Int, s *big.Int) (bool, error) {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "openPolynomialAtPoint", c, pi, r, s)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// OpenPolynomialAtPoint is a free data retrieval call binding the contract method 0xb4a6a8f0.
//
// Solidity: function openPolynomialAtPoint((uint256,uint256) c, (uint256[2],uint256[2]) pi, uint256 r, uint256 s) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) OpenPolynomialAtPoint(c BN254G1Point, pi BN254G2Point, r *big.Int, s *big.Int) (bool, error) {
	return _ContractDataLayrChallengeUtils.Contract.OpenPolynomialAtPoint(&_ContractDataLayrChallengeUtils.CallOpts, c, pi, r, s)
}

// OpenPolynomialAtPoint is a free data retrieval call binding the contract method 0xb4a6a8f0.
//
// Solidity: function openPolynomialAtPoint((uint256,uint256) c, (uint256[2],uint256[2]) pi, uint256 r, uint256 s) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) OpenPolynomialAtPoint(c BN254G1Point, pi BN254G2Point, r *big.Int, s *big.Int) (bool, error) {
	return _ContractDataLayrChallengeUtils.Contract.OpenPolynomialAtPoint(&_ContractDataLayrChallengeUtils.CallOpts, c, pi, r, s)
}

// ReverseBits is a free data retrieval call binding the contract method 0xb3902827.
//
// Solidity: function reverseBits(uint32 value) pure returns(uint32)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) ReverseBits(opts *bind.CallOpts, value uint32) (uint32, error) {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "reverseBits", value)

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// ReverseBits is a free data retrieval call binding the contract method 0xb3902827.
//
// Solidity: function reverseBits(uint32 value) pure returns(uint32)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) ReverseBits(value uint32) (uint32, error) {
	return _ContractDataLayrChallengeUtils.Contract.ReverseBits(&_ContractDataLayrChallengeUtils.CallOpts, value)
}

// ReverseBits is a free data retrieval call binding the contract method 0xb3902827.
//
// Solidity: function reverseBits(uint32 value) pure returns(uint32)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) ReverseBits(value uint32) (uint32, error) {
	return _ContractDataLayrChallengeUtils.Contract.ReverseBits(&_ContractDataLayrChallengeUtils.CallOpts, value)
}

// ReverseBitsLimited is a free data retrieval call binding the contract method 0x29cc94b8.
//
// Solidity: function reverseBitsLimited(uint32 length, uint32 value) pure returns(uint32)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) ReverseBitsLimited(opts *bind.CallOpts, length uint32, value uint32) (uint32, error) {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "reverseBitsLimited", length, value)

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// ReverseBitsLimited is a free data retrieval call binding the contract method 0x29cc94b8.
//
// Solidity: function reverseBitsLimited(uint32 length, uint32 value) pure returns(uint32)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) ReverseBitsLimited(length uint32, value uint32) (uint32, error) {
	return _ContractDataLayrChallengeUtils.Contract.ReverseBitsLimited(&_ContractDataLayrChallengeUtils.CallOpts, length, value)
}

// ReverseBitsLimited is a free data retrieval call binding the contract method 0x29cc94b8.
//
// Solidity: function reverseBitsLimited(uint32 length, uint32 value) pure returns(uint32)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) ReverseBitsLimited(length uint32, value uint32) (uint32, error) {
	return _ContractDataLayrChallengeUtils.Contract.ReverseBitsLimited(&_ContractDataLayrChallengeUtils.CallOpts, length, value)
}

// ValidateDisclosureResponse is a free data retrieval call binding the contract method 0xd51dd9dc.
//
// Solidity: function validateDisclosureResponse(((uint256,uint256),uint48,uint32,uint32) dskzgMetadata, uint32 chunkNumber, (uint256,uint256) interpolationPoly, (uint256,uint256) revealProof, (uint256[2],uint256[2]) zeroPoly, bytes zeroPolyProof) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) ValidateDisclosureResponse(opts *bind.CallOpts, dskzgMetadata DataLayrChallengeUtilsDataStoreKZGMetadata, chunkNumber uint32, interpolationPoly BN254G1Point, revealProof BN254G1Point, zeroPoly BN254G2Point, zeroPolyProof []byte) (bool, error) {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "validateDisclosureResponse", dskzgMetadata, chunkNumber, interpolationPoly, revealProof, zeroPoly, zeroPolyProof)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ValidateDisclosureResponse is a free data retrieval call binding the contract method 0xd51dd9dc.
//
// Solidity: function validateDisclosureResponse(((uint256,uint256),uint48,uint32,uint32) dskzgMetadata, uint32 chunkNumber, (uint256,uint256) interpolationPoly, (uint256,uint256) revealProof, (uint256[2],uint256[2]) zeroPoly, bytes zeroPolyProof) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) ValidateDisclosureResponse(dskzgMetadata DataLayrChallengeUtilsDataStoreKZGMetadata, chunkNumber uint32, interpolationPoly BN254G1Point, revealProof BN254G1Point, zeroPoly BN254G2Point, zeroPolyProof []byte) (bool, error) {
	return _ContractDataLayrChallengeUtils.Contract.ValidateDisclosureResponse(&_ContractDataLayrChallengeUtils.CallOpts, dskzgMetadata, chunkNumber, interpolationPoly, revealProof, zeroPoly, zeroPolyProof)
}

// ValidateDisclosureResponse is a free data retrieval call binding the contract method 0xd51dd9dc.
//
// Solidity: function validateDisclosureResponse(((uint256,uint256),uint48,uint32,uint32) dskzgMetadata, uint32 chunkNumber, (uint256,uint256) interpolationPoly, (uint256,uint256) revealProof, (uint256[2],uint256[2]) zeroPoly, bytes zeroPolyProof) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) ValidateDisclosureResponse(dskzgMetadata DataLayrChallengeUtilsDataStoreKZGMetadata, chunkNumber uint32, interpolationPoly BN254G1Point, revealProof BN254G1Point, zeroPoly BN254G2Point, zeroPolyProof []byte) (bool, error) {
	return _ContractDataLayrChallengeUtils.Contract.ValidateDisclosureResponse(&_ContractDataLayrChallengeUtils.CallOpts, dskzgMetadata, chunkNumber, interpolationPoly, revealProof, zeroPoly, zeroPolyProof)
}

// VerifyBatchPolyEquivalenceProof is a free data retrieval call binding the contract method 0x6781cce3.
//
// Solidity: function verifyBatchPolyEquivalenceProof(bytes[] polys, (uint256,uint256)[] interpolationPolys, (uint256[2],uint256[2]) polyEquivalenceProof) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) VerifyBatchPolyEquivalenceProof(opts *bind.CallOpts, polys [][]byte, interpolationPolys []BN254G1Point, polyEquivalenceProof BN254G2Point) (bool, error) {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "verifyBatchPolyEquivalenceProof", polys, interpolationPolys, polyEquivalenceProof)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VerifyBatchPolyEquivalenceProof is a free data retrieval call binding the contract method 0x6781cce3.
//
// Solidity: function verifyBatchPolyEquivalenceProof(bytes[] polys, (uint256,uint256)[] interpolationPolys, (uint256[2],uint256[2]) polyEquivalenceProof) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) VerifyBatchPolyEquivalenceProof(polys [][]byte, interpolationPolys []BN254G1Point, polyEquivalenceProof BN254G2Point) (bool, error) {
	return _ContractDataLayrChallengeUtils.Contract.VerifyBatchPolyEquivalenceProof(&_ContractDataLayrChallengeUtils.CallOpts, polys, interpolationPolys, polyEquivalenceProof)
}

// VerifyBatchPolyEquivalenceProof is a free data retrieval call binding the contract method 0x6781cce3.
//
// Solidity: function verifyBatchPolyEquivalenceProof(bytes[] polys, (uint256,uint256)[] interpolationPolys, (uint256[2],uint256[2]) polyEquivalenceProof) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) VerifyBatchPolyEquivalenceProof(polys [][]byte, interpolationPolys []BN254G1Point, polyEquivalenceProof BN254G2Point) (bool, error) {
	return _ContractDataLayrChallengeUtils.Contract.VerifyBatchPolyEquivalenceProof(&_ContractDataLayrChallengeUtils.CallOpts, polys, interpolationPolys, polyEquivalenceProof)
}

// VerifyPolyEquivalenceProof is a free data retrieval call binding the contract method 0x0f470232.
//
// Solidity: function verifyPolyEquivalenceProof(bytes poly, (uint256,uint256) interpolationPoly, (uint256[2],uint256[2]) polyEquivalenceProof) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCaller) VerifyPolyEquivalenceProof(opts *bind.CallOpts, poly []byte, interpolationPoly BN254G1Point, polyEquivalenceProof BN254G2Point) (bool, error) {
	var out []interface{}
	err := _ContractDataLayrChallengeUtils.contract.Call(opts, &out, "verifyPolyEquivalenceProof", poly, interpolationPoly, polyEquivalenceProof)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VerifyPolyEquivalenceProof is a free data retrieval call binding the contract method 0x0f470232.
//
// Solidity: function verifyPolyEquivalenceProof(bytes poly, (uint256,uint256) interpolationPoly, (uint256[2],uint256[2]) polyEquivalenceProof) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsSession) VerifyPolyEquivalenceProof(poly []byte, interpolationPoly BN254G1Point, polyEquivalenceProof BN254G2Point) (bool, error) {
	return _ContractDataLayrChallengeUtils.Contract.VerifyPolyEquivalenceProof(&_ContractDataLayrChallengeUtils.CallOpts, poly, interpolationPoly, polyEquivalenceProof)
}

// VerifyPolyEquivalenceProof is a free data retrieval call binding the contract method 0x0f470232.
//
// Solidity: function verifyPolyEquivalenceProof(bytes poly, (uint256,uint256) interpolationPoly, (uint256[2],uint256[2]) polyEquivalenceProof) view returns(bool)
func (_ContractDataLayrChallengeUtils *ContractDataLayrChallengeUtilsCallerSession) VerifyPolyEquivalenceProof(poly []byte, interpolationPoly BN254G1Point, polyEquivalenceProof BN254G2Point) (bool, error) {
	return _ContractDataLayrChallengeUtils.Contract.VerifyPolyEquivalenceProof(&_ContractDataLayrChallengeUtils.CallOpts, poly, interpolationPoly, polyEquivalenceProof)
}
