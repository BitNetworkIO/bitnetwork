// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package tgm

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ITssGroupManagerTssMember is an auto generated low-level Go binding around an user-defined struct.
type ITssGroupManagerTssMember struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}

// TssGroupManagerMetaData contains all meta data concerning the TssGroupManager contract.
var TssGroupManagerMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_groupKey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"activeTssMembers\",\"type\":\"bytes[]\"}],\"name\":\"tssActiveMemberAppended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"_inActiveTssMembers\",\"type\":\"bytes[]\"}],\"name\":\"tssGroupMemberAppend\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTssGroupInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTssGroupMembers\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTssGroupUnJailMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTssInactiveGroupInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"getTssMember\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"enumITssGroupManager.MemberStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"structITssGroupManager.TssMember\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inActiveIsEmpty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"byteListA\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"byteListB\",\"type\":\"bytes\"}],\"name\":\"isEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isInActiveMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isSubmitGroupKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberExistActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberExistInActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"memberGroupKey\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberJail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberUnJail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"}],\"name\":\"publicKeyToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"recover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_groupPublicKey\",\"type\":\"bytes\"}],\"name\":\"setGroupPublicKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setStakingSlash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"_batchPublicKey\",\"type\":\"bytes[]\"}],\"name\":\"setTssGroupMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tssActiveMemberInfo\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"enumITssGroupManager.MemberStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_groupPublicKey\",\"type\":\"bytes\"}],\"name\":\"updateTssMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_message\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"verifySign\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b50612df4806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063715018a6116100f9578063b3bd9ac411610097578063f2fde38b11610071578063f2fde38b1461041f578063fa54080114610432578063fcca5592146104a1578063fd3eb81f146104b957600080fd5b8063b3bd9ac4146103bc578063bcbc5fc6146103de578063e46a6368146103f157600080fd5b80638a51d8b4116100d35780638a51d8b4146103605780638da5cb5b14610369578063953df8f81461038757806395f645bc146103a757600080fd5b8063715018a61461033d5780637a952c11146103455780638129fc1c1461035857600080fd5b8063404a6986116101665780634679b366116101405780634679b366146102e45780634866e2e0146102f757806354bbb9141461030a5780636cc3c0a41461032a57600080fd5b8063404a6986146102a7578063429ec49c146102be57806343ae656c146102d157600080fd5b80632cd00d53116101a25780632cd00d531461022e57806331d26d6d146102435780633231a7f014610281578063343598081461029457600080fd5b806319045a25146101c95780631a47931b14610206578063254ff9811461021b575b600080fd5b6101dc6101d7366004612631565b6104cc565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610219610214366004612678565b61054c565b005b610219610229366004612747565b6107f3565b6102366108cc565b6040516101fd9190612784565b610271610251366004612747565b805160208183018101805160a28252928201919093012091525460ff1681565b60405190151581526020016101fd565b61027161028f366004612631565b610a67565b6102716102a23660046127de565b610b95565b6102af610c57565b6040516101fd93929190612907565b6102196102cc366004612747565b610d42565b6101dc6102df366004612747565b610de1565b6102196102f23660046127de565b610e40565b610271610305366004612747565b61119a565b61031d610318366004612747565b6111c5565b6040516101fd9190612999565b610219610338366004612747565b61130d565b61021961164a565b610219610353366004612747565b61165e565b610219611820565b609e5415610271565b60335473ffffffffffffffffffffffffffffffffffffffff166101dc565b61039a610395366004612747565b611985565b6040516101fd91906129f1565b6103af611a2a565b6040516101fd9190612a0b565b6103cf6103ca366004612747565b611b03565b6040516101fd93929190612a1e565b6102716103ec366004612747565b611be6565b6102716103ff366004612747565b805160208183018101805160a38252928201919093012091525460ff1681565b61021961042d366004612a5c565b611c2b565b610493610440366004612a92565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b6040519081526020016101fd565b6104a9611cc5565b6040516101fd9493929190612aab565b6102196104c7366004612a5c565b611fd1565b6000806000806104db85612020565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015610536573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b610554612094565b60008151116105aa5760405162461bcd60e51b815260206004820152601960248201527f6261746368207075626c6963206b657920697320656d7074790000000000000060448201526064015b60405180910390fd5b80518211156106215760405162461bcd60e51b815260206004820152602360248201527f7468726573686f6c64206d757374206c657373207468616e20747373206d656d60448201527f626572000000000000000000000000000000000000000000000000000000000060648201526084016105a1565b609e54156106975760405162461bcd60e51b815260206004820152602660248201527f696e61637469766520747373206d656d626572206172726179206973206e6f7460448201527f20656d707479000000000000000000000000000000000000000000000000000060648201526084016105a1565b60005b815181101561079757609e8282815181106106b7576106b7612ae7565b602090810291909101810151825460018101845560009384529282902081516106e99491909101929190910190612382565b50600160a383838151811061070057610700612ae7565b60200260200101516040516107159190612b16565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600060a283838151811061075057610750612ae7565b60200260200101516040516107659190612b16565b908152604051908190036020019020805491151560ff199092169190911790558061078f81612b61565b91505061069a565b5060988290556099546107ab906001612b9a565b60998190556000609a556040517ffa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e916107e79185908590612907565b60405180910390a15050565b609c5473ffffffffffffffffffffffffffffffffffffffff1633146108805760405162461bcd60e51b815260206004820152602560248201527f636f6e74726163742063616c6c206973206e6f74207374616b696e6720736c6160448201527f7368696e6700000000000000000000000000000000000000000000000000000060648201526084016105a1565b6001609f826040516108929190612b16565b908152602001604051809103902060010160146101000a81548160ff021916908360018111156108c4576108c461292f565b021790555050565b60606108da609b6000612406565b60005b609d548110156109f9576000609f609d83815481106108fe576108fe612ae7565b906000526020600020016040516109159190612c06565b908152602001604051809103902060010160149054906101000a900460ff1660018111156109455761094561292f565b14156109e757609b609f609d838154811061096257610962612ae7565b906000526020600020016040516109799190612c06565b9081526040519081900360209081019091206001908101548354918201845560009384529190922090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790555b806109f181612b61565b9150506108dd565b50609b805480602002602001604051908101604052809291908181526020018280548015610a5d57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610a32575b5050505050905090565b600080610ac1846040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050610b5660978054610ad390612bb2565b80601f0160208091040260200160405190810160405280929190818152602001828054610aff90612bb2565b8015610b4c5780601f10610b2157610100808354040283529160200191610b4c565b820191906000526020600020905b815481529060010190602001808311610b2f57829003601f168201915b5050505050610de1565b73ffffffffffffffffffffffffffffffffffffffff16610b7682856104cc565b73ffffffffffffffffffffffffffffffffffffffff1614949350505050565b60008151835114610ba857506000610546565b60005b8351811015610c4d57828181518110610bc657610bc6612ae7565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916848281518110610c0557610c05612ae7565b01602001517fff000000000000000000000000000000000000000000000000000000000000001614610c3b576000915050610546565b80610c4581612b61565b915050610bab565b5060019392505050565b6000806060609954609854609e80805480602002602001604051908101604052809291908181526020016000905b82821015610d31578382906000526020600020018054610ca490612bb2565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd090612bb2565b8015610d1d5780601f10610cf257610100808354040283529160200191610d1d565b820191906000526020600020905b815481529060010190602001808311610d0057829003601f168201915b505050505081526020019060010190610c85565b505050509050925092509250909192565b609c5473ffffffffffffffffffffffffffffffffffffffff163314610dcf5760405162461bcd60e51b815260206004820152602560248201527f636f6e74726163742063616c6c206973206e6f74207374616b696e6720736c6160448201527f7368696e6700000000000000000000000000000000000000000000000000000060648201526084016105a1565b6000609f826040516108929190612b16565b60008151604014610e345760405162461bcd60e51b815260206004820152601f60248201527f7075626c6963206b6579206c656e677468206d7573742036342062797465730060448201526064016105a1565b50805160209091012090565b60a382604051610e509190612b16565b9081526040519081900360200190205460ff161515600114610eda5760405162461bcd60e51b815260206004820152602860248201527f796f7572207075626c6963206b6579206973206e6f7420696e20496e4163746960448201527f76654d656d62657200000000000000000000000000000000000000000000000060648201526084016105a1565b610ee382610de1565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f5d5760405162461bcd60e51b815260206004820152601460248201527f7075626c6963206b6579206e6f74206d6174636800000000000000000000000060448201526064016105a1565b60a282604051610f6d9190612b16565b9081526040519081900360200190205460ff16610fc857600160a283604051610f969190612b16565b908152604051908190036020019020805491151560ff19909216919091179055609a54610fc4906001612b9a565b609a555b61107860a083604051610fdb9190612b16565b90815260200160405180910390208054610ff490612bb2565b80601f016020809104026020016040519081016040528092919081815260200182805461102090612bb2565b801561106d5780601f106110425761010080835404028352916020019161106d565b820191906000526020600020905b81548152906001019060200180831161105057829003601f168201915b505050505082610b95565b61116457600160a18260405161108e9190612b16565b908152602001604051809103902060008282546110ab9190612b9a565b909155505060405160a0906110c1908490612b16565b908152602001604051809103902080546110da90612bb2565b15905061113057600160a160a0846040516110f59190612b16565b90815260405190819003602001812061110d91612c06565b9081526020016040518091039020600082825461112a9190612c78565b90915550505b8060a0836040516111419190612b16565b90815260200160405180910390209080519060200190611162929190612382565b505b609e5460405160a190611178908490612b16565b9081526020016040518091039020541415611196576111968161130d565b5050565b600060a3826040516111ac9190612b16565b9081526040519081900360200190205460ff1692915050565b6111e660408051606080820183528152600060208201819052909182015290565b609f826040516111f69190612b16565b908152602001604051809103902060405180606001604052908160008201805461121f90612bb2565b80601f016020809104026020016040519081016040528092919081815260200182805461124b90612bb2565b80156112985780601f1061126d57610100808354040283529160200191611298565b820191906000526020600020905b81548152906001019060200180831161127b57829003601f168201915b505050918352505060018281015473ffffffffffffffffffffffffffffffffffffffff8116602084015260409092019174010000000000000000000000000000000000000000900460ff16908111156112f3576112f361292f565b60018111156113045761130461292f565b90525092915050565b60005b609e548110156115bb57609d609e828154811061132f5761132f612ae7565b60009182526020808320845460018101865594845292209101805491909201919061135990612bb2565b611364929190612424565b506040518060600160405280609e838154811061138357611383612ae7565b90600052602060002001805461139890612bb2565b80601f01602080910402602001604051908101604052809291908181526020018280546113c490612bb2565b80156114115780601f106113e657610100808354040283529160200191611411565b820191906000526020600020905b8154815290600101906020018083116113f457829003601f168201915b50505050508152602001611446609e848154811061143157611431612ae7565b906000526020600020018054610ad390612bb2565b73ffffffffffffffffffffffffffffffffffffffff1681526020016000815250609f609e838154811061147b5761147b612ae7565b906000526020600020016040516114929190612c06565b908152602001604051809103902060008201518160000190805190602001906114bc929190612382565b5060208201516001808301805473ffffffffffffffffffffffffffffffffffffffff9093167fffffffffffffffffffffffff000000000000000000000000000000000000000084168117825560408601519391927fffffffffffffffffffffff00000000000000000000000000000000000000000090921617907401000000000000000000000000000000000000000090849081111561155e5761155e61292f565b021790555090505060a3609e828154811061157b5761157b612ae7565b906000526020600020016040516115929190612c06565b908152604051908190036020019020805460ff19169055806115b381612b61565b915050611310565b506000609a81905560405160a1906115d4908490612b16565b90815260200160405180910390208190555080609790805190602001906115fc929190612382565b50611609609e600061249f565b7f61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b6660995482609d60405161163f93929190612c8f565b60405180910390a150565b611652612094565b61165c60006120fb565b565b609c5473ffffffffffffffffffffffffffffffffffffffff1633146116eb5760405162461bcd60e51b815260206004820152602560248201527f636f6e74726163742063616c6c206973206e6f74207374616b696e6720736c6160448201527f7368696e6700000000000000000000000000000000000000000000000000000060648201526084016105a1565b60005b609d548110156117c7576117a7609d828154811061170e5761170e612ae7565b90600052602060002001805461172390612bb2565b80601f016020809104026020016040519081016040528092919081815260200182805461174f90612bb2565b801561179c5780601f106117715761010080835404028352916020019161179c565b820191906000526020600020905b81548152906001019060200180831161177f57829003601f168201915b505050505083610b95565b156117b5576117b581612172565b806117bf81612b61565b9150506116ee565b50609f816040516117d89190612b16565b90815260405190819003602001902060006117f382826124bd565b5060010180547fffffffffffffffffffffff00000000000000000000000000000000000000000016905550565b600054610100900460ff16158080156118405750600054600160ff909116105b8061185a5750303b15801561185a575060005460ff166001145b6118cc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016105a1565b6000805460ff19166001179055801561190c57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61191461227c565b60006099819055609a819055609855801561198257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200161163f565b50565b805160208183018101805160a082529282019190930120915280546119a990612bb2565b80601f01602080910402602001604051908101604052809291908181526020018280546119d590612bb2565b8015611a225780601f106119f757610100808354040283529160200191611a22565b820191906000526020600020905b815481529060010190602001808311611a0557829003601f168201915b505050505081565b6060609d805480602002602001604051908101604052809291908181526020016000905b82821015611afa578382906000526020600020018054611a6d90612bb2565b80601f0160208091040260200160405190810160405280929190818152602001828054611a9990612bb2565b8015611ae65780601f10611abb57610100808354040283529160200191611ae6565b820191906000526020600020905b815481529060010190602001808311611ac957829003601f168201915b505050505081526020019060010190611a4e565b50505050905090565b8051602081830181018051609f82529282019190930120915280548190611b2990612bb2565b80601f0160208091040260200160405190810160405280929190818152602001828054611b5590612bb2565b8015611ba25780601f10611b7757610100808354040283529160200191611ba2565b820191906000526020600020905b815481529060010190602001808311611b8557829003601f168201915b5050506001909301549192505073ffffffffffffffffffffffffffffffffffffffff81169060ff740100000000000000000000000000000000000000009091041683565b600080609f83604051611bf99190612b16565b9081526040519081900360200190208054611c1390612bb2565b90501115611c2357506001919050565b506000919050565b611c33612094565b73ffffffffffffffffffffffffffffffffffffffff8116611cbc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016105a1565b611982816120fb565b609e546000908190606090819015611e59576001609954611ce69190612c78565b6098546097609d818054611cf990612bb2565b80601f0160208091040260200160405190810160405280929190818152602001828054611d2590612bb2565b8015611d725780601f10611d4757610100808354040283529160200191611d72565b820191906000526020600020905b815481529060010190602001808311611d5557829003601f168201915b5050505050915080805480602002602001604051908101604052809291908181526020016000905b82821015611e46578382906000526020600020018054611db990612bb2565b80601f0160208091040260200160405190810160405280929190818152602001828054611de590612bb2565b8015611e325780601f10611e0757610100808354040283529160200191611e32565b820191906000526020600020905b815481529060010190602001808311611e1557829003601f168201915b505050505081526020019060010190611d9a565b5050505090509350935093509350611fcb565b6099546098546097609d818054611e6f90612bb2565b80601f0160208091040260200160405190810160405280929190818152602001828054611e9b90612bb2565b8015611ee85780601f10611ebd57610100808354040283529160200191611ee8565b820191906000526020600020905b815481529060010190602001808311611ecb57829003601f168201915b5050505050915080805480602002602001604051908101604052809291908181526020016000905b82821015611fbc578382906000526020600020018054611f2f90612bb2565b80601f0160208091040260200160405190810160405280929190818152602001828054611f5b90612bb2565b8015611fa85780601f10611f7d57610100808354040283529160200191611fa8565b820191906000526020600020905b815481529060010190602001808311611f8b57829003601f168201915b505050505081526020019060010190611f10565b50505050905093509350935093505b90919293565b611fd9612094565b609c80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600080600083516041146120765760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016105a1565b50505060208101516040820151606090920151909260009190911a90565b60335473ffffffffffffffffffffffffffffffffffffffff16331461165c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a1565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b609d5481106121c35760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e64000000000000000000000000000060448201526064016105a1565b805b609d546121d490600190612c78565b81101561224957609d6121e8826001612b9a565b815481106121f8576121f8612ae7565b90600052602060002001609d828154811061221557612215612ae7565b9060005260206000200190805461222b90612bb2565b612236929190612424565b508061224181612b61565b9150506121c5565b50609d80548061225b5761225b612d8f565b60019003818190600052602060002001600061227791906124bd565b905550565b600054610100900460ff166122f95760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016105a1565b61165c600054610100900460ff166123795760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016105a1565b61165c336120fb565b82805461238e90612bb2565b90600052602060002090601f0160209004810192826123b057600085556123f6565b82601f106123c957805160ff19168380011785556123f6565b828001600101855582156123f6579182015b828111156123f65782518255916020019190600101906123db565b506124029291506124f3565b5090565b508054600082559060005260206000209081019061198291906124f3565b82805461243090612bb2565b90600052602060002090601f01602090048101928261245257600085556123f6565b82601f1061246357805485556123f6565b828001600101855582156123f657600052602060002091601f016020900482015b828111156123f6578254825591600101919060010190612484565b50805460008255906000526020600020908101906119829190612508565b5080546124c990612bb2565b6000825580601f106124d9575050565b601f01602090049060005260206000209081019061198291905b5b8082111561240257600081556001016124f4565b8082111561240257600061251c82826124bd565b50600101612508565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561259b5761259b612525565b604052919050565b600082601f8301126125b457600080fd5b813567ffffffffffffffff8111156125ce576125ce612525565b6125ff60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612554565b81815284602083860101111561261457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561264457600080fd5b82359150602083013567ffffffffffffffff81111561266257600080fd5b61266e858286016125a3565b9150509250929050565b6000806040838503121561268b57600080fd5b8235915060208084013567ffffffffffffffff808211156126ab57600080fd5b818601915086601f8301126126bf57600080fd5b8135818111156126d1576126d1612525565b8060051b6126e0858201612554565b918252838101850191858101908a8411156126fa57600080fd5b86860192505b83831015612736578235858111156127185760008081fd5b6127268c89838a01016125a3565b8352509186019190860190612700565b809750505050505050509250929050565b60006020828403121561275957600080fd5b813567ffffffffffffffff81111561277057600080fd5b61277c848285016125a3565b949350505050565b6020808252825182820181905260009190848201906040850190845b818110156127d257835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016127a0565b50909695505050505050565b600080604083850312156127f157600080fd5b823567ffffffffffffffff8082111561280957600080fd5b612815868387016125a3565b9350602085013591508082111561282b57600080fd5b5061266e858286016125a3565b60005b8381101561285357818101518382015260200161283b565b83811115612862576000848401525b50505050565b60008151808452612880816020860160208601612838565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b858110156128fa5782840389526128e8848351612868565b988501989350908401906001016128d0565b5091979650505050505050565b83815282602082015260606040820152600061292660608301846128b2565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110612995577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6020815260008251606060208401526129b56080840182612868565b905073ffffffffffffffffffffffffffffffffffffffff602085015116604084015260408401516129e9606085018261295e565b509392505050565b602081526000612a046020830184612868565b9392505050565b602081526000612a0460208301846128b2565b606081526000612a316060830186612868565b905073ffffffffffffffffffffffffffffffffffffffff8416602083015261277c604083018461295e565b600060208284031215612a6e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114612a0457600080fd5b600060208284031215612aa457600080fd5b5035919050565b848152836020820152608060408201526000612aca6080830185612868565b8281036060840152612adc81856128b2565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008251612b28818460208701612838565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612b9357612b93612b32565b5060010190565b60008219821115612bad57612bad612b32565b500190565b600181811c90821680612bc657607f821691505b60208210811415612c00577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000808354612c1481612bb2565b60018281168015612c2c5760018114612c3d57612c6c565b60ff19841687528287019450612c6c565b8760005260208060002060005b85811015612c635781548a820152908401908201612c4a565b50505082870194505b50929695505050505050565b600082821015612c8a57612c8a612b32565b500390565b83815260006020606081840152612ca96060840186612868565b83810360408501528085548083528383019150838160051b8401016000888152858120815b84811015612d7e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0878503018652828254612d0981612bb2565b80875260018281168015612d245760018114612d3857612d67565b60ff1984168d8a0152604089019450612d67565b8688528c8820885b84811015612d5f5781548f828d01015283820191508e81019050612d40565b8a018e019550505b50988b019892965050509190910190600101612cce565b50919b9a5050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212209f274b1db0d34666e75daae93034ed1c3d36b40f8e8ae75cbf9b46159ac8e6f064736f6c63430008090033",
}

// TssGroupManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use TssGroupManagerMetaData.ABI instead.
var TssGroupManagerABI = TssGroupManagerMetaData.ABI

// TssGroupManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use TssGroupManagerMetaData.Bin instead.
var TssGroupManagerBin = TssGroupManagerMetaData.Bin

// DeployTssGroupManager deploys a new Ethereum contract, binding an instance of TssGroupManager to it.
func DeployTssGroupManager(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *TssGroupManager, error) {
	parsed, err := TssGroupManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(TssGroupManagerBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &TssGroupManager{TssGroupManagerCaller: TssGroupManagerCaller{contract: contract}, TssGroupManagerTransactor: TssGroupManagerTransactor{contract: contract}, TssGroupManagerFilterer: TssGroupManagerFilterer{contract: contract}}, nil
}

// TssGroupManager is an auto generated Go binding around an Ethereum contract.
type TssGroupManager struct {
	TssGroupManagerCaller     // Read-only binding to the contract
	TssGroupManagerTransactor // Write-only binding to the contract
	TssGroupManagerFilterer   // Log filterer for contract events
}

// TssGroupManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type TssGroupManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TssGroupManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TssGroupManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TssGroupManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TssGroupManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TssGroupManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TssGroupManagerSession struct {
	Contract     *TssGroupManager  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TssGroupManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TssGroupManagerCallerSession struct {
	Contract *TssGroupManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// TssGroupManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TssGroupManagerTransactorSession struct {
	Contract     *TssGroupManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// TssGroupManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type TssGroupManagerRaw struct {
	Contract *TssGroupManager // Generic contract binding to access the raw methods on
}

// TssGroupManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TssGroupManagerCallerRaw struct {
	Contract *TssGroupManagerCaller // Generic read-only contract binding to access the raw methods on
}

// TssGroupManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TssGroupManagerTransactorRaw struct {
	Contract *TssGroupManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTssGroupManager creates a new instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManager(address common.Address, backend bind.ContractBackend) (*TssGroupManager, error) {
	contract, err := bindTssGroupManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &TssGroupManager{TssGroupManagerCaller: TssGroupManagerCaller{contract: contract}, TssGroupManagerTransactor: TssGroupManagerTransactor{contract: contract}, TssGroupManagerFilterer: TssGroupManagerFilterer{contract: contract}}, nil
}

// NewTssGroupManagerCaller creates a new read-only instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManagerCaller(address common.Address, caller bind.ContractCaller) (*TssGroupManagerCaller, error) {
	contract, err := bindTssGroupManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerCaller{contract: contract}, nil
}

// NewTssGroupManagerTransactor creates a new write-only instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*TssGroupManagerTransactor, error) {
	contract, err := bindTssGroupManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerTransactor{contract: contract}, nil
}

// NewTssGroupManagerFilterer creates a new log filterer instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*TssGroupManagerFilterer, error) {
	contract, err := bindTssGroupManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerFilterer{contract: contract}, nil
}

// bindTssGroupManager binds a generic wrapper to an already deployed contract.
func bindTssGroupManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(TssGroupManagerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TssGroupManager *TssGroupManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TssGroupManager.Contract.TssGroupManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TssGroupManager *TssGroupManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TssGroupManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TssGroupManager *TssGroupManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TssGroupManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TssGroupManager *TssGroupManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TssGroupManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TssGroupManager *TssGroupManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TssGroupManager *TssGroupManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TssGroupManager.Contract.contract.Transact(opts, method, params...)
}

// GetEthSignedMessageHash is a free data retrieval call binding the contract method 0xfa540801.
//
// Solidity: function getEthSignedMessageHash(bytes32 _messageHash) pure returns(bytes32)
func (_TssGroupManager *TssGroupManagerCaller) GetEthSignedMessageHash(opts *bind.CallOpts, _messageHash [32]byte) ([32]byte, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "getEthSignedMessageHash", _messageHash)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetEthSignedMessageHash is a free data retrieval call binding the contract method 0xfa540801.
//
// Solidity: function getEthSignedMessageHash(bytes32 _messageHash) pure returns(bytes32)
func (_TssGroupManager *TssGroupManagerSession) GetEthSignedMessageHash(_messageHash [32]byte) ([32]byte, error) {
	return _TssGroupManager.Contract.GetEthSignedMessageHash(&_TssGroupManager.CallOpts, _messageHash)
}

// GetEthSignedMessageHash is a free data retrieval call binding the contract method 0xfa540801.
//
// Solidity: function getEthSignedMessageHash(bytes32 _messageHash) pure returns(bytes32)
func (_TssGroupManager *TssGroupManagerCallerSession) GetEthSignedMessageHash(_messageHash [32]byte) ([32]byte, error) {
	return _TssGroupManager.Contract.GetEthSignedMessageHash(&_TssGroupManager.CallOpts, _messageHash)
}

// GetTssGroupInfo is a free data retrieval call binding the contract method 0xfcca5592.
//
// Solidity: function getTssGroupInfo() view returns(uint256, uint256, bytes, bytes[])
func (_TssGroupManager *TssGroupManagerCaller) GetTssGroupInfo(opts *bind.CallOpts) (*big.Int, *big.Int, []byte, [][]byte, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "getTssGroupInfo")

	if err != nil {
		return *new(*big.Int), *new(*big.Int), *new([]byte), *new([][]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	out2 := *abi.ConvertType(out[2], new([]byte)).(*[]byte)
	out3 := *abi.ConvertType(out[3], new([][]byte)).(*[][]byte)

	return out0, out1, out2, out3, err

}

// GetTssGroupInfo is a free data retrieval call binding the contract method 0xfcca5592.
//
// Solidity: function getTssGroupInfo() view returns(uint256, uint256, bytes, bytes[])
func (_TssGroupManager *TssGroupManagerSession) GetTssGroupInfo() (*big.Int, *big.Int, []byte, [][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupInfo(&_TssGroupManager.CallOpts)
}

// GetTssGroupInfo is a free data retrieval call binding the contract method 0xfcca5592.
//
// Solidity: function getTssGroupInfo() view returns(uint256, uint256, bytes, bytes[])
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssGroupInfo() (*big.Int, *big.Int, []byte, [][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupInfo(&_TssGroupManager.CallOpts)
}

// GetTssGroupMembers is a free data retrieval call binding the contract method 0x95f645bc.
//
// Solidity: function getTssGroupMembers() view returns(bytes[])
func (_TssGroupManager *TssGroupManagerCaller) GetTssGroupMembers(opts *bind.CallOpts) ([][]byte, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "getTssGroupMembers")

	if err != nil {
		return *new([][]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([][]byte)).(*[][]byte)

	return out0, err

}

// GetTssGroupMembers is a free data retrieval call binding the contract method 0x95f645bc.
//
// Solidity: function getTssGroupMembers() view returns(bytes[])
func (_TssGroupManager *TssGroupManagerSession) GetTssGroupMembers() ([][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupMembers(&_TssGroupManager.CallOpts)
}

// GetTssGroupMembers is a free data retrieval call binding the contract method 0x95f645bc.
//
// Solidity: function getTssGroupMembers() view returns(bytes[])
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssGroupMembers() ([][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupMembers(&_TssGroupManager.CallOpts)
}

// GetTssInactiveGroupInfo is a free data retrieval call binding the contract method 0x404a6986.
//
// Solidity: function getTssInactiveGroupInfo() view returns(uint256, uint256, bytes[])
func (_TssGroupManager *TssGroupManagerCaller) GetTssInactiveGroupInfo(opts *bind.CallOpts) (*big.Int, *big.Int, [][]byte, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "getTssInactiveGroupInfo")

	if err != nil {
		return *new(*big.Int), *new(*big.Int), *new([][]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	out2 := *abi.ConvertType(out[2], new([][]byte)).(*[][]byte)

	return out0, out1, out2, err

}

// GetTssInactiveGroupInfo is a free data retrieval call binding the contract method 0x404a6986.
//
// Solidity: function getTssInactiveGroupInfo() view returns(uint256, uint256, bytes[])
func (_TssGroupManager *TssGroupManagerSession) GetTssInactiveGroupInfo() (*big.Int, *big.Int, [][]byte, error) {
	return _TssGroupManager.Contract.GetTssInactiveGroupInfo(&_TssGroupManager.CallOpts)
}

// GetTssInactiveGroupInfo is a free data retrieval call binding the contract method 0x404a6986.
//
// Solidity: function getTssInactiveGroupInfo() view returns(uint256, uint256, bytes[])
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssInactiveGroupInfo() (*big.Int, *big.Int, [][]byte, error) {
	return _TssGroupManager.Contract.GetTssInactiveGroupInfo(&_TssGroupManager.CallOpts)
}

// GetTssMember is a free data retrieval call binding the contract method 0x54bbb914.
//
// Solidity: function getTssMember(bytes _publicKey) view returns((bytes,address,uint8))
func (_TssGroupManager *TssGroupManagerCaller) GetTssMember(opts *bind.CallOpts, _publicKey []byte) (ITssGroupManagerTssMember, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "getTssMember", _publicKey)

	if err != nil {
		return *new(ITssGroupManagerTssMember), err
	}

	out0 := *abi.ConvertType(out[0], new(ITssGroupManagerTssMember)).(*ITssGroupManagerTssMember)

	return out0, err

}

// GetTssMember is a free data retrieval call binding the contract method 0x54bbb914.
//
// Solidity: function getTssMember(bytes _publicKey) view returns((bytes,address,uint8))
func (_TssGroupManager *TssGroupManagerSession) GetTssMember(_publicKey []byte) (ITssGroupManagerTssMember, error) {
	return _TssGroupManager.Contract.GetTssMember(&_TssGroupManager.CallOpts, _publicKey)
}

// GetTssMember is a free data retrieval call binding the contract method 0x54bbb914.
//
// Solidity: function getTssMember(bytes _publicKey) view returns((bytes,address,uint8))
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssMember(_publicKey []byte) (ITssGroupManagerTssMember, error) {
	return _TssGroupManager.Contract.GetTssMember(&_TssGroupManager.CallOpts, _publicKey)
}

// InActiveIsEmpty is a free data retrieval call binding the contract method 0x8a51d8b4.
//
// Solidity: function inActiveIsEmpty() view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) InActiveIsEmpty(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "inActiveIsEmpty")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// InActiveIsEmpty is a free data retrieval call binding the contract method 0x8a51d8b4.
//
// Solidity: function inActiveIsEmpty() view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) InActiveIsEmpty() (bool, error) {
	return _TssGroupManager.Contract.InActiveIsEmpty(&_TssGroupManager.CallOpts)
}

// InActiveIsEmpty is a free data retrieval call binding the contract method 0x8a51d8b4.
//
// Solidity: function inActiveIsEmpty() view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) InActiveIsEmpty() (bool, error) {
	return _TssGroupManager.Contract.InActiveIsEmpty(&_TssGroupManager.CallOpts)
}

// IsEqual is a free data retrieval call binding the contract method 0x34359808.
//
// Solidity: function isEqual(bytes byteListA, bytes byteListB) pure returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) IsEqual(opts *bind.CallOpts, byteListA []byte, byteListB []byte) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "isEqual", byteListA, byteListB)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsEqual is a free data retrieval call binding the contract method 0x34359808.
//
// Solidity: function isEqual(bytes byteListA, bytes byteListB) pure returns(bool)
func (_TssGroupManager *TssGroupManagerSession) IsEqual(byteListA []byte, byteListB []byte) (bool, error) {
	return _TssGroupManager.Contract.IsEqual(&_TssGroupManager.CallOpts, byteListA, byteListB)
}

// IsEqual is a free data retrieval call binding the contract method 0x34359808.
//
// Solidity: function isEqual(bytes byteListA, bytes byteListB) pure returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) IsEqual(byteListA []byte, byteListB []byte) (bool, error) {
	return _TssGroupManager.Contract.IsEqual(&_TssGroupManager.CallOpts, byteListA, byteListB)
}

// IsInActiveMember is a free data retrieval call binding the contract method 0xe46a6368.
//
// Solidity: function isInActiveMember(bytes ) view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) IsInActiveMember(opts *bind.CallOpts, arg0 []byte) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "isInActiveMember", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsInActiveMember is a free data retrieval call binding the contract method 0xe46a6368.
//
// Solidity: function isInActiveMember(bytes ) view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) IsInActiveMember(arg0 []byte) (bool, error) {
	return _TssGroupManager.Contract.IsInActiveMember(&_TssGroupManager.CallOpts, arg0)
}

// IsInActiveMember is a free data retrieval call binding the contract method 0xe46a6368.
//
// Solidity: function isInActiveMember(bytes ) view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) IsInActiveMember(arg0 []byte) (bool, error) {
	return _TssGroupManager.Contract.IsInActiveMember(&_TssGroupManager.CallOpts, arg0)
}

// IsSubmitGroupKey is a free data retrieval call binding the contract method 0x31d26d6d.
//
// Solidity: function isSubmitGroupKey(bytes ) view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) IsSubmitGroupKey(opts *bind.CallOpts, arg0 []byte) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "isSubmitGroupKey", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsSubmitGroupKey is a free data retrieval call binding the contract method 0x31d26d6d.
//
// Solidity: function isSubmitGroupKey(bytes ) view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) IsSubmitGroupKey(arg0 []byte) (bool, error) {
	return _TssGroupManager.Contract.IsSubmitGroupKey(&_TssGroupManager.CallOpts, arg0)
}

// IsSubmitGroupKey is a free data retrieval call binding the contract method 0x31d26d6d.
//
// Solidity: function isSubmitGroupKey(bytes ) view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) IsSubmitGroupKey(arg0 []byte) (bool, error) {
	return _TssGroupManager.Contract.IsSubmitGroupKey(&_TssGroupManager.CallOpts, arg0)
}

// MemberExistActive is a free data retrieval call binding the contract method 0xbcbc5fc6.
//
// Solidity: function memberExistActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) MemberExistActive(opts *bind.CallOpts, _publicKey []byte) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "memberExistActive", _publicKey)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// MemberExistActive is a free data retrieval call binding the contract method 0xbcbc5fc6.
//
// Solidity: function memberExistActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) MemberExistActive(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistActive(&_TssGroupManager.CallOpts, _publicKey)
}

// MemberExistActive is a free data retrieval call binding the contract method 0xbcbc5fc6.
//
// Solidity: function memberExistActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) MemberExistActive(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistActive(&_TssGroupManager.CallOpts, _publicKey)
}

// MemberExistInActive is a free data retrieval call binding the contract method 0x4866e2e0.
//
// Solidity: function memberExistInActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) MemberExistInActive(opts *bind.CallOpts, _publicKey []byte) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "memberExistInActive", _publicKey)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// MemberExistInActive is a free data retrieval call binding the contract method 0x4866e2e0.
//
// Solidity: function memberExistInActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) MemberExistInActive(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistInActive(&_TssGroupManager.CallOpts, _publicKey)
}

// MemberExistInActive is a free data retrieval call binding the contract method 0x4866e2e0.
//
// Solidity: function memberExistInActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) MemberExistInActive(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistInActive(&_TssGroupManager.CallOpts, _publicKey)
}

// MemberGroupKey is a free data retrieval call binding the contract method 0x953df8f8.
//
// Solidity: function memberGroupKey(bytes ) view returns(bytes)
func (_TssGroupManager *TssGroupManagerCaller) MemberGroupKey(opts *bind.CallOpts, arg0 []byte) ([]byte, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "memberGroupKey", arg0)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// MemberGroupKey is a free data retrieval call binding the contract method 0x953df8f8.
//
// Solidity: function memberGroupKey(bytes ) view returns(bytes)
func (_TssGroupManager *TssGroupManagerSession) MemberGroupKey(arg0 []byte) ([]byte, error) {
	return _TssGroupManager.Contract.MemberGroupKey(&_TssGroupManager.CallOpts, arg0)
}

// MemberGroupKey is a free data retrieval call binding the contract method 0x953df8f8.
//
// Solidity: function memberGroupKey(bytes ) view returns(bytes)
func (_TssGroupManager *TssGroupManagerCallerSession) MemberGroupKey(arg0 []byte) ([]byte, error) {
	return _TssGroupManager.Contract.MemberGroupKey(&_TssGroupManager.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_TssGroupManager *TssGroupManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_TssGroupManager *TssGroupManagerSession) Owner() (common.Address, error) {
	return _TssGroupManager.Contract.Owner(&_TssGroupManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_TssGroupManager *TssGroupManagerCallerSession) Owner() (common.Address, error) {
	return _TssGroupManager.Contract.Owner(&_TssGroupManager.CallOpts)
}

// PublicKeyToAddress is a free data retrieval call binding the contract method 0x43ae656c.
//
// Solidity: function publicKeyToAddress(bytes publicKey) pure returns(address)
func (_TssGroupManager *TssGroupManagerCaller) PublicKeyToAddress(opts *bind.CallOpts, publicKey []byte) (common.Address, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "publicKeyToAddress", publicKey)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PublicKeyToAddress is a free data retrieval call binding the contract method 0x43ae656c.
//
// Solidity: function publicKeyToAddress(bytes publicKey) pure returns(address)
func (_TssGroupManager *TssGroupManagerSession) PublicKeyToAddress(publicKey []byte) (common.Address, error) {
	return _TssGroupManager.Contract.PublicKeyToAddress(&_TssGroupManager.CallOpts, publicKey)
}

// PublicKeyToAddress is a free data retrieval call binding the contract method 0x43ae656c.
//
// Solidity: function publicKeyToAddress(bytes publicKey) pure returns(address)
func (_TssGroupManager *TssGroupManagerCallerSession) PublicKeyToAddress(publicKey []byte) (common.Address, error) {
	return _TssGroupManager.Contract.PublicKeyToAddress(&_TssGroupManager.CallOpts, publicKey)
}

// Recover is a free data retrieval call binding the contract method 0x19045a25.
//
// Solidity: function recover(bytes32 _ethSignedMessageHash, bytes _sig) pure returns(address)
func (_TssGroupManager *TssGroupManagerCaller) Recover(opts *bind.CallOpts, _ethSignedMessageHash [32]byte, _sig []byte) (common.Address, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "recover", _ethSignedMessageHash, _sig)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Recover is a free data retrieval call binding the contract method 0x19045a25.
//
// Solidity: function recover(bytes32 _ethSignedMessageHash, bytes _sig) pure returns(address)
func (_TssGroupManager *TssGroupManagerSession) Recover(_ethSignedMessageHash [32]byte, _sig []byte) (common.Address, error) {
	return _TssGroupManager.Contract.Recover(&_TssGroupManager.CallOpts, _ethSignedMessageHash, _sig)
}

// Recover is a free data retrieval call binding the contract method 0x19045a25.
//
// Solidity: function recover(bytes32 _ethSignedMessageHash, bytes _sig) pure returns(address)
func (_TssGroupManager *TssGroupManagerCallerSession) Recover(_ethSignedMessageHash [32]byte, _sig []byte) (common.Address, error) {
	return _TssGroupManager.Contract.Recover(&_TssGroupManager.CallOpts, _ethSignedMessageHash, _sig)
}

// TssActiveMemberInfo is a free data retrieval call binding the contract method 0xb3bd9ac4.
//
// Solidity: function tssActiveMemberInfo(bytes ) view returns(bytes publicKey, address nodeAddress, uint8 status)
func (_TssGroupManager *TssGroupManagerCaller) TssActiveMemberInfo(opts *bind.CallOpts, arg0 []byte) (struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "tssActiveMemberInfo", arg0)

	outstruct := new(struct {
		PublicKey   []byte
		NodeAddress common.Address
		Status      uint8
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.PublicKey = *abi.ConvertType(out[0], new([]byte)).(*[]byte)
	outstruct.NodeAddress = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)
	outstruct.Status = *abi.ConvertType(out[2], new(uint8)).(*uint8)

	return *outstruct, err

}

// TssActiveMemberInfo is a free data retrieval call binding the contract method 0xb3bd9ac4.
//
// Solidity: function tssActiveMemberInfo(bytes ) view returns(bytes publicKey, address nodeAddress, uint8 status)
func (_TssGroupManager *TssGroupManagerSession) TssActiveMemberInfo(arg0 []byte) (struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}, error) {
	return _TssGroupManager.Contract.TssActiveMemberInfo(&_TssGroupManager.CallOpts, arg0)
}

// TssActiveMemberInfo is a free data retrieval call binding the contract method 0xb3bd9ac4.
//
// Solidity: function tssActiveMemberInfo(bytes ) view returns(bytes publicKey, address nodeAddress, uint8 status)
func (_TssGroupManager *TssGroupManagerCallerSession) TssActiveMemberInfo(arg0 []byte) (struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}, error) {
	return _TssGroupManager.Contract.TssActiveMemberInfo(&_TssGroupManager.CallOpts, arg0)
}

// VerifySign is a free data retrieval call binding the contract method 0x3231a7f0.
//
// Solidity: function verifySign(bytes32 _message, bytes _sig) view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) VerifySign(opts *bind.CallOpts, _message [32]byte, _sig []byte) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "verifySign", _message, _sig)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VerifySign is a free data retrieval call binding the contract method 0x3231a7f0.
//
// Solidity: function verifySign(bytes32 _message, bytes _sig) view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) VerifySign(_message [32]byte, _sig []byte) (bool, error) {
	return _TssGroupManager.Contract.VerifySign(&_TssGroupManager.CallOpts, _message, _sig)
}

// VerifySign is a free data retrieval call binding the contract method 0x3231a7f0.
//
// Solidity: function verifySign(bytes32 _message, bytes _sig) view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) VerifySign(_message [32]byte, _sig []byte) (bool, error) {
	return _TssGroupManager.Contract.VerifySign(&_TssGroupManager.CallOpts, _message, _sig)
}

// GetTssGroupUnJailMembers is a paid mutator transaction binding the contract method 0x2cd00d53.
//
// Solidity: function getTssGroupUnJailMembers() returns(address[])
func (_TssGroupManager *TssGroupManagerTransactor) GetTssGroupUnJailMembers(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "getTssGroupUnJailMembers")
}

// GetTssGroupUnJailMembers is a paid mutator transaction binding the contract method 0x2cd00d53.
//
// Solidity: function getTssGroupUnJailMembers() returns(address[])
func (_TssGroupManager *TssGroupManagerSession) GetTssGroupUnJailMembers() (*types.Transaction, error) {
	return _TssGroupManager.Contract.GetTssGroupUnJailMembers(&_TssGroupManager.TransactOpts)
}

// GetTssGroupUnJailMembers is a paid mutator transaction binding the contract method 0x2cd00d53.
//
// Solidity: function getTssGroupUnJailMembers() returns(address[])
func (_TssGroupManager *TssGroupManagerTransactorSession) GetTssGroupUnJailMembers() (*types.Transaction, error) {
	return _TssGroupManager.Contract.GetTssGroupUnJailMembers(&_TssGroupManager.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_TssGroupManager *TssGroupManagerTransactor) Initialize(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "initialize")
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_TssGroupManager *TssGroupManagerSession) Initialize() (*types.Transaction, error) {
	return _TssGroupManager.Contract.Initialize(&_TssGroupManager.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) Initialize() (*types.Transaction, error) {
	return _TssGroupManager.Contract.Initialize(&_TssGroupManager.TransactOpts)
}

// MemberJail is a paid mutator transaction binding the contract method 0x254ff981.
//
// Solidity: function memberJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) MemberJail(opts *bind.TransactOpts, _publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "memberJail", _publicKey)
}

// MemberJail is a paid mutator transaction binding the contract method 0x254ff981.
//
// Solidity: function memberJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) MemberJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// MemberJail is a paid mutator transaction binding the contract method 0x254ff981.
//
// Solidity: function memberJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) MemberJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// MemberUnJail is a paid mutator transaction binding the contract method 0x429ec49c.
//
// Solidity: function memberUnJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) MemberUnJail(opts *bind.TransactOpts, _publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "memberUnJail", _publicKey)
}

// MemberUnJail is a paid mutator transaction binding the contract method 0x429ec49c.
//
// Solidity: function memberUnJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) MemberUnJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberUnJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// MemberUnJail is a paid mutator transaction binding the contract method 0x429ec49c.
//
// Solidity: function memberUnJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) MemberUnJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberUnJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// RemoveMember is a paid mutator transaction binding the contract method 0x7a952c11.
//
// Solidity: function removeMember(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) RemoveMember(opts *bind.TransactOpts, _publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "removeMember", _publicKey)
}

// RemoveMember is a paid mutator transaction binding the contract method 0x7a952c11.
//
// Solidity: function removeMember(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) RemoveMember(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.RemoveMember(&_TssGroupManager.TransactOpts, _publicKey)
}

// RemoveMember is a paid mutator transaction binding the contract method 0x7a952c11.
//
// Solidity: function removeMember(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) RemoveMember(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.RemoveMember(&_TssGroupManager.TransactOpts, _publicKey)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_TssGroupManager *TssGroupManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_TssGroupManager *TssGroupManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _TssGroupManager.Contract.RenounceOwnership(&_TssGroupManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _TssGroupManager.Contract.RenounceOwnership(&_TssGroupManager.TransactOpts)
}

// SetGroupPublicKey is a paid mutator transaction binding the contract method 0x4679b366.
//
// Solidity: function setGroupPublicKey(bytes _publicKey, bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) SetGroupPublicKey(opts *bind.TransactOpts, _publicKey []byte, _groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "setGroupPublicKey", _publicKey, _groupPublicKey)
}

// SetGroupPublicKey is a paid mutator transaction binding the contract method 0x4679b366.
//
// Solidity: function setGroupPublicKey(bytes _publicKey, bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) SetGroupPublicKey(_publicKey []byte, _groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetGroupPublicKey(&_TssGroupManager.TransactOpts, _publicKey, _groupPublicKey)
}

// SetGroupPublicKey is a paid mutator transaction binding the contract method 0x4679b366.
//
// Solidity: function setGroupPublicKey(bytes _publicKey, bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) SetGroupPublicKey(_publicKey []byte, _groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetGroupPublicKey(&_TssGroupManager.TransactOpts, _publicKey, _groupPublicKey)
}

// SetStakingSlash is a paid mutator transaction binding the contract method 0xfd3eb81f.
//
// Solidity: function setStakingSlash(address _address) returns()
func (_TssGroupManager *TssGroupManagerTransactor) SetStakingSlash(opts *bind.TransactOpts, _address common.Address) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "setStakingSlash", _address)
}

// SetStakingSlash is a paid mutator transaction binding the contract method 0xfd3eb81f.
//
// Solidity: function setStakingSlash(address _address) returns()
func (_TssGroupManager *TssGroupManagerSession) SetStakingSlash(_address common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetStakingSlash(&_TssGroupManager.TransactOpts, _address)
}

// SetStakingSlash is a paid mutator transaction binding the contract method 0xfd3eb81f.
//
// Solidity: function setStakingSlash(address _address) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) SetStakingSlash(_address common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetStakingSlash(&_TssGroupManager.TransactOpts, _address)
}

// SetTssGroupMember is a paid mutator transaction binding the contract method 0x1a47931b.
//
// Solidity: function setTssGroupMember(uint256 _threshold, bytes[] _batchPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) SetTssGroupMember(opts *bind.TransactOpts, _threshold *big.Int, _batchPublicKey [][]byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "setTssGroupMember", _threshold, _batchPublicKey)
}

// SetTssGroupMember is a paid mutator transaction binding the contract method 0x1a47931b.
//
// Solidity: function setTssGroupMember(uint256 _threshold, bytes[] _batchPublicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) SetTssGroupMember(_threshold *big.Int, _batchPublicKey [][]byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetTssGroupMember(&_TssGroupManager.TransactOpts, _threshold, _batchPublicKey)
}

// SetTssGroupMember is a paid mutator transaction binding the contract method 0x1a47931b.
//
// Solidity: function setTssGroupMember(uint256 _threshold, bytes[] _batchPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) SetTssGroupMember(_threshold *big.Int, _batchPublicKey [][]byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetTssGroupMember(&_TssGroupManager.TransactOpts, _threshold, _batchPublicKey)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TssGroupManager *TssGroupManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TssGroupManager *TssGroupManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TransferOwnership(&_TssGroupManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TransferOwnership(&_TssGroupManager.TransactOpts, newOwner)
}

// UpdateTssMember is a paid mutator transaction binding the contract method 0x6cc3c0a4.
//
// Solidity: function updateTssMember(bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) UpdateTssMember(opts *bind.TransactOpts, _groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "updateTssMember", _groupPublicKey)
}

// UpdateTssMember is a paid mutator transaction binding the contract method 0x6cc3c0a4.
//
// Solidity: function updateTssMember(bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) UpdateTssMember(_groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.UpdateTssMember(&_TssGroupManager.TransactOpts, _groupPublicKey)
}

// UpdateTssMember is a paid mutator transaction binding the contract method 0x6cc3c0a4.
//
// Solidity: function updateTssMember(bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) UpdateTssMember(_groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.UpdateTssMember(&_TssGroupManager.TransactOpts, _groupPublicKey)
}

// TssGroupManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the TssGroupManager contract.
type TssGroupManagerInitializedIterator struct {
	Event *TssGroupManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerInitialized represents a Initialized event raised by the TssGroupManager contract.
type TssGroupManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_TssGroupManager *TssGroupManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*TssGroupManagerInitializedIterator, error) {

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerInitializedIterator{contract: _TssGroupManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_TssGroupManager *TssGroupManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *TssGroupManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerInitialized)
				if err := _TssGroupManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_TssGroupManager *TssGroupManagerFilterer) ParseInitialized(log types.Log) (*TssGroupManagerInitialized, error) {
	event := new(TssGroupManagerInitialized)
	if err := _TssGroupManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssGroupManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the TssGroupManager contract.
type TssGroupManagerOwnershipTransferredIterator struct {
	Event *TssGroupManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerOwnershipTransferred represents a OwnershipTransferred event raised by the TssGroupManager contract.
type TssGroupManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_TssGroupManager *TssGroupManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*TssGroupManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerOwnershipTransferredIterator{contract: _TssGroupManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_TssGroupManager *TssGroupManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *TssGroupManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerOwnershipTransferred)
				if err := _TssGroupManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_TssGroupManager *TssGroupManagerFilterer) ParseOwnershipTransferred(log types.Log) (*TssGroupManagerOwnershipTransferred, error) {
	event := new(TssGroupManagerOwnershipTransferred)
	if err := _TssGroupManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssGroupManagerTssActiveMemberAppendedIterator is returned from FilterTssActiveMemberAppended and is used to iterate over the raw logs and unpacked data for TssActiveMemberAppended events raised by the TssGroupManager contract.
type TssGroupManagerTssActiveMemberAppendedIterator struct {
	Event *TssGroupManagerTssActiveMemberAppended // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerTssActiveMemberAppendedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerTssActiveMemberAppended)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerTssActiveMemberAppended)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerTssActiveMemberAppendedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerTssActiveMemberAppendedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerTssActiveMemberAppended represents a TssActiveMemberAppended event raised by the TssGroupManager contract.
type TssGroupManagerTssActiveMemberAppended struct {
	RoundId          *big.Int
	GroupKey         []byte
	ActiveTssMembers [][]byte
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterTssActiveMemberAppended is a free log retrieval operation binding the contract event 0x61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b66.
//
// Solidity: event tssActiveMemberAppended(uint256 _roundId, bytes _groupKey, bytes[] activeTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) FilterTssActiveMemberAppended(opts *bind.FilterOpts) (*TssGroupManagerTssActiveMemberAppendedIterator, error) {

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "tssActiveMemberAppended")
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerTssActiveMemberAppendedIterator{contract: _TssGroupManager.contract, event: "tssActiveMemberAppended", logs: logs, sub: sub}, nil
}

// WatchTssActiveMemberAppended is a free log subscription operation binding the contract event 0x61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b66.
//
// Solidity: event tssActiveMemberAppended(uint256 _roundId, bytes _groupKey, bytes[] activeTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) WatchTssActiveMemberAppended(opts *bind.WatchOpts, sink chan<- *TssGroupManagerTssActiveMemberAppended) (event.Subscription, error) {

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "tssActiveMemberAppended")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerTssActiveMemberAppended)
				if err := _TssGroupManager.contract.UnpackLog(event, "tssActiveMemberAppended", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTssActiveMemberAppended is a log parse operation binding the contract event 0x61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b66.
//
// Solidity: event tssActiveMemberAppended(uint256 _roundId, bytes _groupKey, bytes[] activeTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) ParseTssActiveMemberAppended(log types.Log) (*TssGroupManagerTssActiveMemberAppended, error) {
	event := new(TssGroupManagerTssActiveMemberAppended)
	if err := _TssGroupManager.contract.UnpackLog(event, "tssActiveMemberAppended", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssGroupManagerTssGroupMemberAppendIterator is returned from FilterTssGroupMemberAppend and is used to iterate over the raw logs and unpacked data for TssGroupMemberAppend events raised by the TssGroupManager contract.
type TssGroupManagerTssGroupMemberAppendIterator struct {
	Event *TssGroupManagerTssGroupMemberAppend // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerTssGroupMemberAppendIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerTssGroupMemberAppend)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerTssGroupMemberAppend)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerTssGroupMemberAppendIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerTssGroupMemberAppendIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerTssGroupMemberAppend represents a TssGroupMemberAppend event raised by the TssGroupManager contract.
type TssGroupManagerTssGroupMemberAppend struct {
	RoundId            *big.Int
	Threshold          *big.Int
	InActiveTssMembers [][]byte
	Raw                types.Log // Blockchain specific contextual infos
}

// FilterTssGroupMemberAppend is a free log retrieval operation binding the contract event 0xfa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e.
//
// Solidity: event tssGroupMemberAppend(uint256 _roundId, uint256 _threshold, bytes[] _inActiveTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) FilterTssGroupMemberAppend(opts *bind.FilterOpts) (*TssGroupManagerTssGroupMemberAppendIterator, error) {

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "tssGroupMemberAppend")
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerTssGroupMemberAppendIterator{contract: _TssGroupManager.contract, event: "tssGroupMemberAppend", logs: logs, sub: sub}, nil
}

// WatchTssGroupMemberAppend is a free log subscription operation binding the contract event 0xfa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e.
//
// Solidity: event tssGroupMemberAppend(uint256 _roundId, uint256 _threshold, bytes[] _inActiveTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) WatchTssGroupMemberAppend(opts *bind.WatchOpts, sink chan<- *TssGroupManagerTssGroupMemberAppend) (event.Subscription, error) {

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "tssGroupMemberAppend")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerTssGroupMemberAppend)
				if err := _TssGroupManager.contract.UnpackLog(event, "tssGroupMemberAppend", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTssGroupMemberAppend is a log parse operation binding the contract event 0xfa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e.
//
// Solidity: event tssGroupMemberAppend(uint256 _roundId, uint256 _threshold, bytes[] _inActiveTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) ParseTssGroupMemberAppend(log types.Log) (*TssGroupManagerTssGroupMemberAppend, error) {
	event := new(TssGroupManagerTssGroupMemberAppend)
	if err := _TssGroupManager.contract.UnpackLog(event, "tssGroupMemberAppend", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
