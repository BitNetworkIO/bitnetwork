// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package tgm

import (
	"math/big"
	"strings"

	ethereum "github.com/bitdao-io/bitnetwork/l2geth"
	"github.com/bitdao-io/bitnetwork/l2geth/accounts/abi"
	"github.com/bitdao-io/bitnetwork/l2geth/accounts/abi/bind"
	"github.com/bitdao-io/bitnetwork/l2geth/common"
	"github.com/bitdao-io/bitnetwork/l2geth/core/types"
	"github.com/bitdao-io/bitnetwork/l2geth/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ITssGroupManagerTssMember is an auto generated low-level Go binding around an user-defined struct.
type ITssGroupManagerTssMember struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}

// TssGroupManagerABI is the input ABI used to generate the binding from.
const TssGroupManagerABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_groupKey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"activeTssMembers\",\"type\":\"bytes[]\"}],\"name\":\"tssActiveMemberAppended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"_inActiveTssMembers\",\"type\":\"bytes[]\"}],\"name\":\"tssGroupMemberAppend\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTssGroupInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTssGroupMembers\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTssGroupUnJailMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"getTssMember\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"enumITssGroupManager.MemberStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"structITssGroupManager.TssMember\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inActiveIsEmpty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"byteListA\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"byteListB\",\"type\":\"bytes\"}],\"name\":\"isEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isInActiveMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isSubmitGroupKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberExistActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberExistInActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"memberGroupKey\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberJail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberUnJail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"}],\"name\":\"publicKeyToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"recover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_groupPublicKey\",\"type\":\"bytes\"}],\"name\":\"setGroupPublicKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setStakingSlash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"_batchPublicKey\",\"type\":\"bytes[]\"}],\"name\":\"setTssGroupMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tssActiveMemberInfo\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"enumITssGroupManager.MemberStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_groupPublicKey\",\"type\":\"bytes\"}],\"name\":\"updateTssMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_message\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"verifySign\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// TssGroupManagerBin is the compiled bytecode used for deploying new contracts.
var TssGroupManagerBin = "0x608060405234801561001057600080fd5b50612b58806100206000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c8063715018a6116100f9578063b3bd9ac411610097578063f2fde38b11610071578063f2fde38b146103fd578063fa54080114610410578063fcca55921461047f578063fd3eb81f1461049757600080fd5b8063b3bd9ac41461039a578063bcbc5fc6146103bc578063e46a6368146103cf57600080fd5b80638a51d8b4116100d35780638a51d8b41461033e5780638da5cb5b14610347578063953df8f81461036557806395f645bc1461038557600080fd5b8063715018a61461031b5780637a952c11146103235780638129fc1c1461033657600080fd5b806334359808116101665780634679b366116101405780634679b366146102c25780634866e2e0146102d557806354bbb914146102e85780636cc3c0a41461030857600080fd5b80633435980814610289578063429ec49c1461029c57806343ae656c146102af57600080fd5b80632cd00d53116101975780632cd00d531461022357806331d26d6d146102385780633231a7f01461027657600080fd5b806319045a25146101be5780631a47931b146101fb578063254ff98114610210575b600080fd5b6101d16101cc366004612395565b6104aa565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61020e6102093660046123dc565b61052a565b005b61020e61021e3660046124ab565b6107d1565b61022b6108aa565b6040516101f291906124e8565b6102666102463660046124ab565b805160208183018101805160a28252928201919093012091525460ff1681565b60405190151581526020016101f2565b610266610284366004612395565b610a45565b610266610297366004612542565b610b73565b61020e6102aa3660046124ab565b610c35565b6101d16102bd3660046124ab565b610cd4565b61020e6102d0366004612542565b610d33565b6102666102e33660046124ab565b61108d565b6102fb6102f63660046124ab565b6110b8565b6040516101f29190612680565b61020e6103163660046124ab565b611200565b61020e61153d565b61020e6103313660046124ab565b611551565b61020e611713565b609e5415610266565b60335473ffffffffffffffffffffffffffffffffffffffff166101d1565b6103786103733660046124ab565b611878565b6040516101f291906126d8565b61038d61191d565b6040516101f29190612747565b6103ad6103a83660046124ab565b6119f6565b6040516101f29392919061275a565b6102666103ca3660046124ab565b611ad9565b6102666103dd3660046124ab565b805160208183018101805160a38252928201919093012091525460ff1681565b61020e61040b366004612798565b611b1e565b61047161041e3660046127ce565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b6040519081526020016101f2565b610487611bb8565b6040516101f294939291906127e7565b61020e6104a5366004612798565b611d35565b6000806000806104b985611d84565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015610514573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b610532611df8565b60008151116105885760405162461bcd60e51b815260206004820152601960248201527f6261746368207075626c6963206b657920697320656d7074790000000000000060448201526064015b60405180910390fd5b80518211156105ff5760405162461bcd60e51b815260206004820152602360248201527f7468726573686f6c64206d757374206c657373207468616e20747373206d656d60448201527f6265720000000000000000000000000000000000000000000000000000000000606482015260840161057f565b609e54156106755760405162461bcd60e51b815260206004820152602660248201527f696e61637469766520747373206d656d626572206172726179206973206e6f7460448201527f20656d7074790000000000000000000000000000000000000000000000000000606482015260840161057f565b60005b815181101561077557609e82828151811061069557610695612823565b602090810291909101810151825460018101845560009384529282902081516106c794919091019291909101906120e6565b50600160a38383815181106106de576106de612823565b60200260200101516040516106f39190612852565b908152602001604051809103902060006101000a81548160ff021916908315150217905550600060a283838151811061072e5761072e612823565b60200260200101516040516107439190612852565b908152604051908190036020019020805491151560ff199092169190911790558061076d8161289d565b915050610678565b5060988290556099546107899060016128d6565b60998190556000609a556040517ffa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e916107c591859085906128ee565b60405180910390a15050565b609c5473ffffffffffffffffffffffffffffffffffffffff16331461085e5760405162461bcd60e51b815260206004820152602560248201527f636f6e74726163742063616c6c206973206e6f74207374616b696e6720736c6160448201527f7368696e67000000000000000000000000000000000000000000000000000000606482015260840161057f565b6001609f826040516108709190612852565b908152602001604051809103902060010160146101000a81548160ff021916908360018111156108a2576108a2612616565b021790555050565b60606108b8609b600061216a565b60005b609d548110156109d7576000609f609d83815481106108dc576108dc612823565b906000526020600020016040516108f3919061296a565b908152602001604051809103902060010160149054906101000a900460ff16600181111561092357610923612616565b14156109c557609b609f609d838154811061094057610940612823565b90600052602060002001604051610957919061296a565b9081526040519081900360209081019091206001908101548354918201845560009384529190922090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790555b806109cf8161289d565b9150506108bb565b50609b805480602002602001604051908101604052809291908181526020018280548015610a3b57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610a10575b5050505050905090565b600080610a9f846040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050610b3460978054610ab190612916565b80601f0160208091040260200160405190810160405280929190818152602001828054610add90612916565b8015610b2a5780601f10610aff57610100808354040283529160200191610b2a565b820191906000526020600020905b815481529060010190602001808311610b0d57829003601f168201915b5050505050610cd4565b73ffffffffffffffffffffffffffffffffffffffff16610b5482856104aa565b73ffffffffffffffffffffffffffffffffffffffff1614949350505050565b60008151835114610b8657506000610524565b60005b8351811015610c2b57828181518110610ba457610ba4612823565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916848281518110610be357610be3612823565b01602001517fff000000000000000000000000000000000000000000000000000000000000001614610c19576000915050610524565b80610c238161289d565b915050610b89565b5060019392505050565b609c5473ffffffffffffffffffffffffffffffffffffffff163314610cc25760405162461bcd60e51b815260206004820152602560248201527f636f6e74726163742063616c6c206973206e6f74207374616b696e6720736c6160448201527f7368696e67000000000000000000000000000000000000000000000000000000606482015260840161057f565b6000609f826040516108709190612852565b60008151604014610d275760405162461bcd60e51b815260206004820152601f60248201527f7075626c6963206b6579206c656e677468206d75737420363420627974657300604482015260640161057f565b50805160209091012090565b60a382604051610d439190612852565b9081526040519081900360200190205460ff161515600114610dcd5760405162461bcd60e51b815260206004820152602860248201527f796f7572207075626c6963206b6579206973206e6f7420696e20496e4163746960448201527f76654d656d626572000000000000000000000000000000000000000000000000606482015260840161057f565b610dd682610cd4565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e505760405162461bcd60e51b815260206004820152601460248201527f7075626c6963206b6579206e6f74206d61746368000000000000000000000000604482015260640161057f565b60a282604051610e609190612852565b9081526040519081900360200190205460ff16610ebb57600160a283604051610e899190612852565b908152604051908190036020019020805491151560ff19909216919091179055609a54610eb79060016128d6565b609a555b610f6b60a083604051610ece9190612852565b90815260200160405180910390208054610ee790612916565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1390612916565b8015610f605780601f10610f3557610100808354040283529160200191610f60565b820191906000526020600020905b815481529060010190602001808311610f4357829003601f168201915b505050505082610b73565b61105757600160a182604051610f819190612852565b90815260200160405180910390206000828254610f9e91906128d6565b909155505060405160a090610fb4908490612852565b90815260200160405180910390208054610fcd90612916565b15905061102357600160a160a084604051610fe89190612852565b9081526040519081900360200181206110009161296a565b9081526020016040518091039020600082825461101d91906129dc565b90915550505b8060a0836040516110349190612852565b908152602001604051809103902090805190602001906110559291906120e6565b505b609e5460405160a19061106b908490612852565b90815260200160405180910390205414156110895761108981611200565b5050565b600060a38260405161109f9190612852565b9081526040519081900360200190205460ff1692915050565b6110d960408051606080820183528152600060208201819052909182015290565b609f826040516110e99190612852565b908152602001604051809103902060405180606001604052908160008201805461111290612916565b80601f016020809104026020016040519081016040528092919081815260200182805461113e90612916565b801561118b5780601f106111605761010080835404028352916020019161118b565b820191906000526020600020905b81548152906001019060200180831161116e57829003601f168201915b505050918352505060018281015473ffffffffffffffffffffffffffffffffffffffff8116602084015260409092019174010000000000000000000000000000000000000000900460ff16908111156111e6576111e6612616565b60018111156111f7576111f7612616565b90525092915050565b60005b609e548110156114ae57609d609e828154811061122257611222612823565b60009182526020808320845460018101865594845292209101805491909201919061124c90612916565b611257929190612188565b506040518060600160405280609e838154811061127657611276612823565b90600052602060002001805461128b90612916565b80601f01602080910402602001604051908101604052809291908181526020018280546112b790612916565b80156113045780601f106112d957610100808354040283529160200191611304565b820191906000526020600020905b8154815290600101906020018083116112e757829003601f168201915b50505050508152602001611339609e848154811061132457611324612823565b906000526020600020018054610ab190612916565b73ffffffffffffffffffffffffffffffffffffffff1681526020016000815250609f609e838154811061136e5761136e612823565b90600052602060002001604051611385919061296a565b908152602001604051809103902060008201518160000190805190602001906113af9291906120e6565b5060208201516001808301805473ffffffffffffffffffffffffffffffffffffffff9093167fffffffffffffffffffffffff000000000000000000000000000000000000000084168117825560408601519391927fffffffffffffffffffffff00000000000000000000000000000000000000000090921617907401000000000000000000000000000000000000000090849081111561145157611451612616565b021790555090505060a3609e828154811061146e5761146e612823565b90600052602060002001604051611485919061296a565b908152604051908190036020019020805460ff19169055806114a68161289d565b915050611203565b506000609a81905560405160a1906114c7908490612852565b90815260200160405180910390208190555080609790805190602001906114ef9291906120e6565b506114fc609e6000612203565b7f61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b6660995482609d604051611532939291906129f3565b60405180910390a150565b611545611df8565b61154f6000611e5f565b565b609c5473ffffffffffffffffffffffffffffffffffffffff1633146115de5760405162461bcd60e51b815260206004820152602560248201527f636f6e74726163742063616c6c206973206e6f74207374616b696e6720736c6160448201527f7368696e67000000000000000000000000000000000000000000000000000000606482015260840161057f565b60005b609d548110156116ba5761169a609d828154811061160157611601612823565b90600052602060002001805461161690612916565b80601f016020809104026020016040519081016040528092919081815260200182805461164290612916565b801561168f5780601f106116645761010080835404028352916020019161168f565b820191906000526020600020905b81548152906001019060200180831161167257829003601f168201915b505050505083610b73565b156116a8576116a881611ed6565b806116b28161289d565b9150506115e1565b50609f816040516116cb9190612852565b90815260405190819003602001902060006116e68282612221565b5060010180547fffffffffffffffffffffff00000000000000000000000000000000000000000016905550565b600054610100900460ff16158080156117335750600054600160ff909116105b8061174d5750303b15801561174d575060005460ff166001145b6117bf5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161057f565b6000805460ff1916600117905580156117ff57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b611807611fe0565b60006099819055609a819055609855801561187557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001611532565b50565b805160208183018101805160a0825292820191909301209152805461189c90612916565b80601f01602080910402602001604051908101604052809291908181526020018280546118c890612916565b80156119155780601f106118ea57610100808354040283529160200191611915565b820191906000526020600020905b8154815290600101906020018083116118f857829003601f168201915b505050505081565b6060609d805480602002602001604051908101604052809291908181526020016000905b828210156119ed57838290600052602060002001805461196090612916565b80601f016020809104026020016040519081016040528092919081815260200182805461198c90612916565b80156119d95780601f106119ae576101008083540402835291602001916119d9565b820191906000526020600020905b8154815290600101906020018083116119bc57829003601f168201915b505050505081526020019060010190611941565b50505050905090565b8051602081830181018051609f82529282019190930120915280548190611a1c90612916565b80601f0160208091040260200160405190810160405280929190818152602001828054611a4890612916565b8015611a955780601f10611a6a57610100808354040283529160200191611a95565b820191906000526020600020905b815481529060010190602001808311611a7857829003601f168201915b5050506001909301549192505073ffffffffffffffffffffffffffffffffffffffff81169060ff740100000000000000000000000000000000000000009091041683565b600080609f83604051611aec9190612852565b9081526040519081900360200190208054611b0690612916565b90501115611b1657506001919050565b506000919050565b611b26611df8565b73ffffffffffffffffffffffffffffffffffffffff8116611baf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161057f565b61187581611e5f565b6000806060806099546098546097609d818054611bd490612916565b80601f0160208091040260200160405190810160405280929190818152602001828054611c0090612916565b8015611c4d5780601f10611c2257610100808354040283529160200191611c4d565b820191906000526020600020905b815481529060010190602001808311611c3057829003601f168201915b5050505050915080805480602002602001604051908101604052809291908181526020016000905b82821015611d21578382906000526020600020018054611c9490612916565b80601f0160208091040260200160405190810160405280929190818152602001828054611cc090612916565b8015611d0d5780601f10611ce257610100808354040283529160200191611d0d565b820191906000526020600020905b815481529060010190602001808311611cf057829003601f168201915b505050505081526020019060010190611c75565b505050509050935093509350935090919293565b611d3d611df8565b609c80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008060008351604114611dda5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e6774680000000000000000604482015260640161057f565b50505060208101516040820151606090920151909260009190911a90565b60335473ffffffffffffffffffffffffffffffffffffffff16331461154f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161057f565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b609d548110611f275760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e640000000000000000000000000000604482015260640161057f565b805b609d54611f38906001906129dc565b811015611fad57609d611f4c8260016128d6565b81548110611f5c57611f5c612823565b90600052602060002001609d8281548110611f7957611f79612823565b90600052602060002001908054611f8f90612916565b611f9a929190612188565b5080611fa58161289d565b915050611f29565b50609d805480611fbf57611fbf612af3565b600190038181906000526020600020016000611fdb9190612221565b905550565b600054610100900460ff1661205d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161057f565b61154f600054610100900460ff166120dd5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161057f565b61154f33611e5f565b8280546120f290612916565b90600052602060002090601f016020900481019282612114576000855561215a565b82601f1061212d57805160ff191683800117855561215a565b8280016001018555821561215a579182015b8281111561215a57825182559160200191906001019061213f565b50612166929150612257565b5090565b50805460008255906000526020600020908101906118759190612257565b82805461219490612916565b90600052602060002090601f0160209004810192826121b6576000855561215a565b82601f106121c7578054855561215a565b8280016001018555821561215a57600052602060002091601f016020900482015b8281111561215a5782548255916001019190600101906121e8565b5080546000825590600052602060002090810190611875919061226c565b50805461222d90612916565b6000825580601f1061223d575050565b601f01602090049060005260206000209081019061187591905b5b808211156121665760008155600101612258565b808211156121665760006122808282612221565b5060010161226c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156122ff576122ff612289565b604052919050565b600082601f83011261231857600080fd5b813567ffffffffffffffff81111561233257612332612289565b61236360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016122b8565b81815284602083860101111561237857600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156123a857600080fd5b82359150602083013567ffffffffffffffff8111156123c657600080fd5b6123d285828601612307565b9150509250929050565b600080604083850312156123ef57600080fd5b8235915060208084013567ffffffffffffffff8082111561240f57600080fd5b818601915086601f83011261242357600080fd5b81358181111561243557612435612289565b8060051b6124448582016122b8565b918252838101850191858101908a84111561245e57600080fd5b86860192505b8383101561249a5782358581111561247c5760008081fd5b61248a8c89838a0101612307565b8352509186019190860190612464565b809750505050505050509250929050565b6000602082840312156124bd57600080fd5b813567ffffffffffffffff8111156124d457600080fd5b6124e084828501612307565b949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561253657835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612504565b50909695505050505050565b6000806040838503121561255557600080fd5b823567ffffffffffffffff8082111561256d57600080fd5b61257986838701612307565b9350602085013591508082111561258f57600080fd5b506123d285828601612307565b60005b838110156125b757818101518382015260200161259f565b838111156125c6576000848401525b50505050565b600081518084526125e481602086016020860161259c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061267c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60208152600082516060602084015261269c60808401826125cc565b905073ffffffffffffffffffffffffffffffffffffffff602085015116604084015260408401516126d06060850182612645565b509392505050565b6020815260006126eb60208301846125cc565b9392505050565b600081518084526020808501808196508360051b8101915082860160005b8581101561273a5782840389526127288483516125cc565b98850198935090840190600101612710565b5091979650505050505050565b6020815260006126eb60208301846126f2565b60608152600061276d60608301866125cc565b905073ffffffffffffffffffffffffffffffffffffffff841660208301526124e06040830184612645565b6000602082840312156127aa57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146126eb57600080fd5b6000602082840312156127e057600080fd5b5035919050565b84815283602082015260806040820152600061280660808301856125cc565b828103606084015261281881856126f2565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000825161286481846020870161259c565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156128cf576128cf61286e565b5060010190565b600082198211156128e9576128e961286e565b500190565b83815282602082015260606040820152600061290d60608301846126f2565b95945050505050565b600181811c9082168061292a57607f821691505b60208210811415612964577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600080835461297881612916565b6001828116801561299057600181146129a1576129d0565b60ff198416875282870194506129d0565b8760005260208060002060005b858110156129c75781548a8201529084019082016129ae565b50505082870194505b50929695505050505050565b6000828210156129ee576129ee61286e565b500390565b83815260006020606081840152612a0d60608401866125cc565b83810360408501528085548083528383019150838160051b8401016000888152858120815b84811015612ae2577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0878503018652828254612a6d81612916565b80875260018281168015612a885760018114612a9c57612acb565b60ff1984168d8a0152604089019450612acb565b8688528c8820885b84811015612ac35781548f828d01015283820191508e81019050612aa4565b8a018e019550505b50988b019892965050509190910190600101612a32565b50919b9a5050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220f771b2bdc4e18c13244181ab9a255305f9865408dcb51634bef097bf8e71f6c264736f6c63430008090033"

// DeployTssGroupManager deploys a new Ethereum contract, binding an instance of TssGroupManager to it.
func DeployTssGroupManager(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *TssGroupManager, error) {
	parsed, err := abi.JSON(strings.NewReader(TssGroupManagerABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(TssGroupManagerBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &TssGroupManager{TssGroupManagerCaller: TssGroupManagerCaller{contract: contract}, TssGroupManagerTransactor: TssGroupManagerTransactor{contract: contract}, TssGroupManagerFilterer: TssGroupManagerFilterer{contract: contract}}, nil
}

// TssGroupManager is an auto generated Go binding around an Ethereum contract.
type TssGroupManager struct {
	TssGroupManagerCaller     // Read-only binding to the contract
	TssGroupManagerTransactor // Write-only binding to the contract
	TssGroupManagerFilterer   // Log filterer for contract events
}

// TssGroupManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type TssGroupManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TssGroupManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TssGroupManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TssGroupManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TssGroupManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TssGroupManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TssGroupManagerSession struct {
	Contract     *TssGroupManager  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TssGroupManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TssGroupManagerCallerSession struct {
	Contract *TssGroupManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// TssGroupManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TssGroupManagerTransactorSession struct {
	Contract     *TssGroupManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// TssGroupManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type TssGroupManagerRaw struct {
	Contract *TssGroupManager // Generic contract binding to access the raw methods on
}

// TssGroupManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TssGroupManagerCallerRaw struct {
	Contract *TssGroupManagerCaller // Generic read-only contract binding to access the raw methods on
}

// TssGroupManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TssGroupManagerTransactorRaw struct {
	Contract *TssGroupManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTssGroupManager creates a new instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManager(address common.Address, backend bind.ContractBackend) (*TssGroupManager, error) {
	contract, err := bindTssGroupManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &TssGroupManager{TssGroupManagerCaller: TssGroupManagerCaller{contract: contract}, TssGroupManagerTransactor: TssGroupManagerTransactor{contract: contract}, TssGroupManagerFilterer: TssGroupManagerFilterer{contract: contract}}, nil
}

// NewTssGroupManagerCaller creates a new read-only instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManagerCaller(address common.Address, caller bind.ContractCaller) (*TssGroupManagerCaller, error) {
	contract, err := bindTssGroupManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerCaller{contract: contract}, nil
}

// NewTssGroupManagerTransactor creates a new write-only instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*TssGroupManagerTransactor, error) {
	contract, err := bindTssGroupManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerTransactor{contract: contract}, nil
}

// NewTssGroupManagerFilterer creates a new log filterer instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*TssGroupManagerFilterer, error) {
	contract, err := bindTssGroupManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerFilterer{contract: contract}, nil
}

// bindTssGroupManager binds a generic wrapper to an already deployed contract.
func bindTssGroupManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(TssGroupManagerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TssGroupManager *TssGroupManagerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _TssGroupManager.Contract.TssGroupManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TssGroupManager *TssGroupManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TssGroupManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TssGroupManager *TssGroupManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TssGroupManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TssGroupManager *TssGroupManagerCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _TssGroupManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TssGroupManager *TssGroupManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TssGroupManager *TssGroupManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TssGroupManager.Contract.contract.Transact(opts, method, params...)
}

// GetEthSignedMessageHash is a free data retrieval call binding the contract method 0xfa540801.
//
// Solidity: function getEthSignedMessageHash(bytes32 _messageHash) constant returns(bytes32)
func (_TssGroupManager *TssGroupManagerCaller) GetEthSignedMessageHash(opts *bind.CallOpts, _messageHash [32]byte) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _TssGroupManager.contract.Call(opts, out, "getEthSignedMessageHash", _messageHash)
	return *ret0, err
}

// GetEthSignedMessageHash is a free data retrieval call binding the contract method 0xfa540801.
//
// Solidity: function getEthSignedMessageHash(bytes32 _messageHash) constant returns(bytes32)
func (_TssGroupManager *TssGroupManagerSession) GetEthSignedMessageHash(_messageHash [32]byte) ([32]byte, error) {
	return _TssGroupManager.Contract.GetEthSignedMessageHash(&_TssGroupManager.CallOpts, _messageHash)
}

// GetEthSignedMessageHash is a free data retrieval call binding the contract method 0xfa540801.
//
// Solidity: function getEthSignedMessageHash(bytes32 _messageHash) constant returns(bytes32)
func (_TssGroupManager *TssGroupManagerCallerSession) GetEthSignedMessageHash(_messageHash [32]byte) ([32]byte, error) {
	return _TssGroupManager.Contract.GetEthSignedMessageHash(&_TssGroupManager.CallOpts, _messageHash)
}

// GetTssGroupInfo is a free data retrieval call binding the contract method 0xfcca5592.
//
// Solidity: function getTssGroupInfo() constant returns(uint256, uint256, bytes, bytes[])
func (_TssGroupManager *TssGroupManagerCaller) GetTssGroupInfo(opts *bind.CallOpts) (*big.Int, *big.Int, []byte, [][]byte, error) {
	var (
		ret0 = new(*big.Int)
		ret1 = new(*big.Int)
		ret2 = new([]byte)
		ret3 = new([][]byte)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _TssGroupManager.contract.Call(opts, out, "getTssGroupInfo")
	return *ret0, *ret1, *ret2, *ret3, err
}

// GetTssGroupInfo is a free data retrieval call binding the contract method 0xfcca5592.
//
// Solidity: function getTssGroupInfo() constant returns(uint256, uint256, bytes, bytes[])
func (_TssGroupManager *TssGroupManagerSession) GetTssGroupInfo() (*big.Int, *big.Int, []byte, [][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupInfo(&_TssGroupManager.CallOpts)
}

// GetTssGroupInfo is a free data retrieval call binding the contract method 0xfcca5592.
//
// Solidity: function getTssGroupInfo() constant returns(uint256, uint256, bytes, bytes[])
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssGroupInfo() (*big.Int, *big.Int, []byte, [][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupInfo(&_TssGroupManager.CallOpts)
}

// GetTssGroupMembers is a free data retrieval call binding the contract method 0x95f645bc.
//
// Solidity: function getTssGroupMembers() constant returns(bytes[])
func (_TssGroupManager *TssGroupManagerCaller) GetTssGroupMembers(opts *bind.CallOpts) ([][]byte, error) {
	var (
		ret0 = new([][]byte)
	)
	out := ret0
	err := _TssGroupManager.contract.Call(opts, out, "getTssGroupMembers")
	return *ret0, err
}

// GetTssGroupMembers is a free data retrieval call binding the contract method 0x95f645bc.
//
// Solidity: function getTssGroupMembers() constant returns(bytes[])
func (_TssGroupManager *TssGroupManagerSession) GetTssGroupMembers() ([][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupMembers(&_TssGroupManager.CallOpts)
}

// GetTssGroupMembers is a free data retrieval call binding the contract method 0x95f645bc.
//
// Solidity: function getTssGroupMembers() constant returns(bytes[])
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssGroupMembers() ([][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupMembers(&_TssGroupManager.CallOpts)
}

// GetTssMember is a free data retrieval call binding the contract method 0x54bbb914.
//
// Solidity: function getTssMember(bytes _publicKey) constant returns(ITssGroupManagerTssMember)
func (_TssGroupManager *TssGroupManagerCaller) GetTssMember(opts *bind.CallOpts, _publicKey []byte) (ITssGroupManagerTssMember, error) {
	var (
		ret0 = new(ITssGroupManagerTssMember)
	)
	out := ret0
	err := _TssGroupManager.contract.Call(opts, out, "getTssMember", _publicKey)
	return *ret0, err
}

// GetTssMember is a free data retrieval call binding the contract method 0x54bbb914.
//
// Solidity: function getTssMember(bytes _publicKey) constant returns(ITssGroupManagerTssMember)
func (_TssGroupManager *TssGroupManagerSession) GetTssMember(_publicKey []byte) (ITssGroupManagerTssMember, error) {
	return _TssGroupManager.Contract.GetTssMember(&_TssGroupManager.CallOpts, _publicKey)
}

// GetTssMember is a free data retrieval call binding the contract method 0x54bbb914.
//
// Solidity: function getTssMember(bytes _publicKey) constant returns(ITssGroupManagerTssMember)
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssMember(_publicKey []byte) (ITssGroupManagerTssMember, error) {
	return _TssGroupManager.Contract.GetTssMember(&_TssGroupManager.CallOpts, _publicKey)
}

// InActiveIsEmpty is a free data retrieval call binding the contract method 0x8a51d8b4.
//
// Solidity: function inActiveIsEmpty() constant returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) InActiveIsEmpty(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _TssGroupManager.contract.Call(opts, out, "inActiveIsEmpty")
	return *ret0, err
}

// InActiveIsEmpty is a free data retrieval call binding the contract method 0x8a51d8b4.
//
// Solidity: function inActiveIsEmpty() constant returns(bool)
func (_TssGroupManager *TssGroupManagerSession) InActiveIsEmpty() (bool, error) {
	return _TssGroupManager.Contract.InActiveIsEmpty(&_TssGroupManager.CallOpts)
}

// InActiveIsEmpty is a free data retrieval call binding the contract method 0x8a51d8b4.
//
// Solidity: function inActiveIsEmpty() constant returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) InActiveIsEmpty() (bool, error) {
	return _TssGroupManager.Contract.InActiveIsEmpty(&_TssGroupManager.CallOpts)
}

// IsEqual is a free data retrieval call binding the contract method 0x34359808.
//
// Solidity: function isEqual(bytes byteListA, bytes byteListB) constant returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) IsEqual(opts *bind.CallOpts, byteListA []byte, byteListB []byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _TssGroupManager.contract.Call(opts, out, "isEqual", byteListA, byteListB)
	return *ret0, err
}

// IsEqual is a free data retrieval call binding the contract method 0x34359808.
//
// Solidity: function isEqual(bytes byteListA, bytes byteListB) constant returns(bool)
func (_TssGroupManager *TssGroupManagerSession) IsEqual(byteListA []byte, byteListB []byte) (bool, error) {
	return _TssGroupManager.Contract.IsEqual(&_TssGroupManager.CallOpts, byteListA, byteListB)
}

// IsEqual is a free data retrieval call binding the contract method 0x34359808.
//
// Solidity: function isEqual(bytes byteListA, bytes byteListB) constant returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) IsEqual(byteListA []byte, byteListB []byte) (bool, error) {
	return _TssGroupManager.Contract.IsEqual(&_TssGroupManager.CallOpts, byteListA, byteListB)
}

// IsInActiveMember is a free data retrieval call binding the contract method 0xe46a6368.
//
// Solidity: function isInActiveMember(bytes ) constant returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) IsInActiveMember(opts *bind.CallOpts, arg0 []byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _TssGroupManager.contract.Call(opts, out, "isInActiveMember", arg0)
	return *ret0, err
}

// IsInActiveMember is a free data retrieval call binding the contract method 0xe46a6368.
//
// Solidity: function isInActiveMember(bytes ) constant returns(bool)
func (_TssGroupManager *TssGroupManagerSession) IsInActiveMember(arg0 []byte) (bool, error) {
	return _TssGroupManager.Contract.IsInActiveMember(&_TssGroupManager.CallOpts, arg0)
}

// IsInActiveMember is a free data retrieval call binding the contract method 0xe46a6368.
//
// Solidity: function isInActiveMember(bytes ) constant returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) IsInActiveMember(arg0 []byte) (bool, error) {
	return _TssGroupManager.Contract.IsInActiveMember(&_TssGroupManager.CallOpts, arg0)
}

// IsSubmitGroupKey is a free data retrieval call binding the contract method 0x31d26d6d.
//
// Solidity: function isSubmitGroupKey(bytes ) constant returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) IsSubmitGroupKey(opts *bind.CallOpts, arg0 []byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _TssGroupManager.contract.Call(opts, out, "isSubmitGroupKey", arg0)
	return *ret0, err
}

// IsSubmitGroupKey is a free data retrieval call binding the contract method 0x31d26d6d.
//
// Solidity: function isSubmitGroupKey(bytes ) constant returns(bool)
func (_TssGroupManager *TssGroupManagerSession) IsSubmitGroupKey(arg0 []byte) (bool, error) {
	return _TssGroupManager.Contract.IsSubmitGroupKey(&_TssGroupManager.CallOpts, arg0)
}

// IsSubmitGroupKey is a free data retrieval call binding the contract method 0x31d26d6d.
//
// Solidity: function isSubmitGroupKey(bytes ) constant returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) IsSubmitGroupKey(arg0 []byte) (bool, error) {
	return _TssGroupManager.Contract.IsSubmitGroupKey(&_TssGroupManager.CallOpts, arg0)
}

// MemberExistActive is a free data retrieval call binding the contract method 0xbcbc5fc6.
//
// Solidity: function memberExistActive(bytes _publicKey) constant returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) MemberExistActive(opts *bind.CallOpts, _publicKey []byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _TssGroupManager.contract.Call(opts, out, "memberExistActive", _publicKey)
	return *ret0, err
}

// MemberExistActive is a free data retrieval call binding the contract method 0xbcbc5fc6.
//
// Solidity: function memberExistActive(bytes _publicKey) constant returns(bool)
func (_TssGroupManager *TssGroupManagerSession) MemberExistActive(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistActive(&_TssGroupManager.CallOpts, _publicKey)
}

// MemberExistActive is a free data retrieval call binding the contract method 0xbcbc5fc6.
//
// Solidity: function memberExistActive(bytes _publicKey) constant returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) MemberExistActive(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistActive(&_TssGroupManager.CallOpts, _publicKey)
}

// MemberExistInActive is a free data retrieval call binding the contract method 0x4866e2e0.
//
// Solidity: function memberExistInActive(bytes _publicKey) constant returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) MemberExistInActive(opts *bind.CallOpts, _publicKey []byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _TssGroupManager.contract.Call(opts, out, "memberExistInActive", _publicKey)
	return *ret0, err
}

// MemberExistInActive is a free data retrieval call binding the contract method 0x4866e2e0.
//
// Solidity: function memberExistInActive(bytes _publicKey) constant returns(bool)
func (_TssGroupManager *TssGroupManagerSession) MemberExistInActive(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistInActive(&_TssGroupManager.CallOpts, _publicKey)
}

// MemberExistInActive is a free data retrieval call binding the contract method 0x4866e2e0.
//
// Solidity: function memberExistInActive(bytes _publicKey) constant returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) MemberExistInActive(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistInActive(&_TssGroupManager.CallOpts, _publicKey)
}

// MemberGroupKey is a free data retrieval call binding the contract method 0x953df8f8.
//
// Solidity: function memberGroupKey(bytes ) constant returns(bytes)
func (_TssGroupManager *TssGroupManagerCaller) MemberGroupKey(opts *bind.CallOpts, arg0 []byte) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _TssGroupManager.contract.Call(opts, out, "memberGroupKey", arg0)
	return *ret0, err
}

// MemberGroupKey is a free data retrieval call binding the contract method 0x953df8f8.
//
// Solidity: function memberGroupKey(bytes ) constant returns(bytes)
func (_TssGroupManager *TssGroupManagerSession) MemberGroupKey(arg0 []byte) ([]byte, error) {
	return _TssGroupManager.Contract.MemberGroupKey(&_TssGroupManager.CallOpts, arg0)
}

// MemberGroupKey is a free data retrieval call binding the contract method 0x953df8f8.
//
// Solidity: function memberGroupKey(bytes ) constant returns(bytes)
func (_TssGroupManager *TssGroupManagerCallerSession) MemberGroupKey(arg0 []byte) ([]byte, error) {
	return _TssGroupManager.Contract.MemberGroupKey(&_TssGroupManager.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_TssGroupManager *TssGroupManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _TssGroupManager.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_TssGroupManager *TssGroupManagerSession) Owner() (common.Address, error) {
	return _TssGroupManager.Contract.Owner(&_TssGroupManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_TssGroupManager *TssGroupManagerCallerSession) Owner() (common.Address, error) {
	return _TssGroupManager.Contract.Owner(&_TssGroupManager.CallOpts)
}

// PublicKeyToAddress is a free data retrieval call binding the contract method 0x43ae656c.
//
// Solidity: function publicKeyToAddress(bytes publicKey) constant returns(address)
func (_TssGroupManager *TssGroupManagerCaller) PublicKeyToAddress(opts *bind.CallOpts, publicKey []byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _TssGroupManager.contract.Call(opts, out, "publicKeyToAddress", publicKey)
	return *ret0, err
}

// PublicKeyToAddress is a free data retrieval call binding the contract method 0x43ae656c.
//
// Solidity: function publicKeyToAddress(bytes publicKey) constant returns(address)
func (_TssGroupManager *TssGroupManagerSession) PublicKeyToAddress(publicKey []byte) (common.Address, error) {
	return _TssGroupManager.Contract.PublicKeyToAddress(&_TssGroupManager.CallOpts, publicKey)
}

// PublicKeyToAddress is a free data retrieval call binding the contract method 0x43ae656c.
//
// Solidity: function publicKeyToAddress(bytes publicKey) constant returns(address)
func (_TssGroupManager *TssGroupManagerCallerSession) PublicKeyToAddress(publicKey []byte) (common.Address, error) {
	return _TssGroupManager.Contract.PublicKeyToAddress(&_TssGroupManager.CallOpts, publicKey)
}

// Recover is a free data retrieval call binding the contract method 0x19045a25.
//
// Solidity: function recover(bytes32 _ethSignedMessageHash, bytes _sig) constant returns(address)
func (_TssGroupManager *TssGroupManagerCaller) Recover(opts *bind.CallOpts, _ethSignedMessageHash [32]byte, _sig []byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _TssGroupManager.contract.Call(opts, out, "recover", _ethSignedMessageHash, _sig)
	return *ret0, err
}

// Recover is a free data retrieval call binding the contract method 0x19045a25.
//
// Solidity: function recover(bytes32 _ethSignedMessageHash, bytes _sig) constant returns(address)
func (_TssGroupManager *TssGroupManagerSession) Recover(_ethSignedMessageHash [32]byte, _sig []byte) (common.Address, error) {
	return _TssGroupManager.Contract.Recover(&_TssGroupManager.CallOpts, _ethSignedMessageHash, _sig)
}

// Recover is a free data retrieval call binding the contract method 0x19045a25.
//
// Solidity: function recover(bytes32 _ethSignedMessageHash, bytes _sig) constant returns(address)
func (_TssGroupManager *TssGroupManagerCallerSession) Recover(_ethSignedMessageHash [32]byte, _sig []byte) (common.Address, error) {
	return _TssGroupManager.Contract.Recover(&_TssGroupManager.CallOpts, _ethSignedMessageHash, _sig)
}

// TssActiveMemberInfo is a free data retrieval call binding the contract method 0xb3bd9ac4.
//
// Solidity: function tssActiveMemberInfo(bytes ) constant returns(bytes publicKey, address nodeAddress, uint8 status)
func (_TssGroupManager *TssGroupManagerCaller) TssActiveMemberInfo(opts *bind.CallOpts, arg0 []byte) (struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}, error) {
	ret := new(struct {
		PublicKey   []byte
		NodeAddress common.Address
		Status      uint8
	})
	out := ret
	err := _TssGroupManager.contract.Call(opts, out, "tssActiveMemberInfo", arg0)
	return *ret, err
}

// TssActiveMemberInfo is a free data retrieval call binding the contract method 0xb3bd9ac4.
//
// Solidity: function tssActiveMemberInfo(bytes ) constant returns(bytes publicKey, address nodeAddress, uint8 status)
func (_TssGroupManager *TssGroupManagerSession) TssActiveMemberInfo(arg0 []byte) (struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}, error) {
	return _TssGroupManager.Contract.TssActiveMemberInfo(&_TssGroupManager.CallOpts, arg0)
}

// TssActiveMemberInfo is a free data retrieval call binding the contract method 0xb3bd9ac4.
//
// Solidity: function tssActiveMemberInfo(bytes ) constant returns(bytes publicKey, address nodeAddress, uint8 status)
func (_TssGroupManager *TssGroupManagerCallerSession) TssActiveMemberInfo(arg0 []byte) (struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}, error) {
	return _TssGroupManager.Contract.TssActiveMemberInfo(&_TssGroupManager.CallOpts, arg0)
}

// VerifySign is a free data retrieval call binding the contract method 0x3231a7f0.
//
// Solidity: function verifySign(bytes32 _message, bytes _sig) constant returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) VerifySign(opts *bind.CallOpts, _message [32]byte, _sig []byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _TssGroupManager.contract.Call(opts, out, "verifySign", _message, _sig)
	return *ret0, err
}

// VerifySign is a free data retrieval call binding the contract method 0x3231a7f0.
//
// Solidity: function verifySign(bytes32 _message, bytes _sig) constant returns(bool)
func (_TssGroupManager *TssGroupManagerSession) VerifySign(_message [32]byte, _sig []byte) (bool, error) {
	return _TssGroupManager.Contract.VerifySign(&_TssGroupManager.CallOpts, _message, _sig)
}

// VerifySign is a free data retrieval call binding the contract method 0x3231a7f0.
//
// Solidity: function verifySign(bytes32 _message, bytes _sig) constant returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) VerifySign(_message [32]byte, _sig []byte) (bool, error) {
	return _TssGroupManager.Contract.VerifySign(&_TssGroupManager.CallOpts, _message, _sig)
}

// GetTssGroupUnJailMembers is a paid mutator transaction binding the contract method 0x2cd00d53.
//
// Solidity: function getTssGroupUnJailMembers() returns(address[])
func (_TssGroupManager *TssGroupManagerTransactor) GetTssGroupUnJailMembers(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "getTssGroupUnJailMembers")
}

// GetTssGroupUnJailMembers is a paid mutator transaction binding the contract method 0x2cd00d53.
//
// Solidity: function getTssGroupUnJailMembers() returns(address[])
func (_TssGroupManager *TssGroupManagerSession) GetTssGroupUnJailMembers() (*types.Transaction, error) {
	return _TssGroupManager.Contract.GetTssGroupUnJailMembers(&_TssGroupManager.TransactOpts)
}

// GetTssGroupUnJailMembers is a paid mutator transaction binding the contract method 0x2cd00d53.
//
// Solidity: function getTssGroupUnJailMembers() returns(address[])
func (_TssGroupManager *TssGroupManagerTransactorSession) GetTssGroupUnJailMembers() (*types.Transaction, error) {
	return _TssGroupManager.Contract.GetTssGroupUnJailMembers(&_TssGroupManager.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_TssGroupManager *TssGroupManagerTransactor) Initialize(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "initialize")
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_TssGroupManager *TssGroupManagerSession) Initialize() (*types.Transaction, error) {
	return _TssGroupManager.Contract.Initialize(&_TssGroupManager.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) Initialize() (*types.Transaction, error) {
	return _TssGroupManager.Contract.Initialize(&_TssGroupManager.TransactOpts)
}

// MemberJail is a paid mutator transaction binding the contract method 0x254ff981.
//
// Solidity: function memberJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) MemberJail(opts *bind.TransactOpts, _publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "memberJail", _publicKey)
}

// MemberJail is a paid mutator transaction binding the contract method 0x254ff981.
//
// Solidity: function memberJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) MemberJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// MemberJail is a paid mutator transaction binding the contract method 0x254ff981.
//
// Solidity: function memberJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) MemberJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// MemberUnJail is a paid mutator transaction binding the contract method 0x429ec49c.
//
// Solidity: function memberUnJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) MemberUnJail(opts *bind.TransactOpts, _publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "memberUnJail", _publicKey)
}

// MemberUnJail is a paid mutator transaction binding the contract method 0x429ec49c.
//
// Solidity: function memberUnJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) MemberUnJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberUnJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// MemberUnJail is a paid mutator transaction binding the contract method 0x429ec49c.
//
// Solidity: function memberUnJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) MemberUnJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberUnJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// RemoveMember is a paid mutator transaction binding the contract method 0x7a952c11.
//
// Solidity: function removeMember(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) RemoveMember(opts *bind.TransactOpts, _publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "removeMember", _publicKey)
}

// RemoveMember is a paid mutator transaction binding the contract method 0x7a952c11.
//
// Solidity: function removeMember(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) RemoveMember(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.RemoveMember(&_TssGroupManager.TransactOpts, _publicKey)
}

// RemoveMember is a paid mutator transaction binding the contract method 0x7a952c11.
//
// Solidity: function removeMember(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) RemoveMember(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.RemoveMember(&_TssGroupManager.TransactOpts, _publicKey)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_TssGroupManager *TssGroupManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_TssGroupManager *TssGroupManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _TssGroupManager.Contract.RenounceOwnership(&_TssGroupManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _TssGroupManager.Contract.RenounceOwnership(&_TssGroupManager.TransactOpts)
}

// SetGroupPublicKey is a paid mutator transaction binding the contract method 0x4679b366.
//
// Solidity: function setGroupPublicKey(bytes _publicKey, bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) SetGroupPublicKey(opts *bind.TransactOpts, _publicKey []byte, _groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "setGroupPublicKey", _publicKey, _groupPublicKey)
}

// SetGroupPublicKey is a paid mutator transaction binding the contract method 0x4679b366.
//
// Solidity: function setGroupPublicKey(bytes _publicKey, bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) SetGroupPublicKey(_publicKey []byte, _groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetGroupPublicKey(&_TssGroupManager.TransactOpts, _publicKey, _groupPublicKey)
}

// SetGroupPublicKey is a paid mutator transaction binding the contract method 0x4679b366.
//
// Solidity: function setGroupPublicKey(bytes _publicKey, bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) SetGroupPublicKey(_publicKey []byte, _groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetGroupPublicKey(&_TssGroupManager.TransactOpts, _publicKey, _groupPublicKey)
}

// SetStakingSlash is a paid mutator transaction binding the contract method 0xfd3eb81f.
//
// Solidity: function setStakingSlash(address _address) returns()
func (_TssGroupManager *TssGroupManagerTransactor) SetStakingSlash(opts *bind.TransactOpts, _address common.Address) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "setStakingSlash", _address)
}

// SetStakingSlash is a paid mutator transaction binding the contract method 0xfd3eb81f.
//
// Solidity: function setStakingSlash(address _address) returns()
func (_TssGroupManager *TssGroupManagerSession) SetStakingSlash(_address common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetStakingSlash(&_TssGroupManager.TransactOpts, _address)
}

// SetStakingSlash is a paid mutator transaction binding the contract method 0xfd3eb81f.
//
// Solidity: function setStakingSlash(address _address) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) SetStakingSlash(_address common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetStakingSlash(&_TssGroupManager.TransactOpts, _address)
}

// SetTssGroupMember is a paid mutator transaction binding the contract method 0x1a47931b.
//
// Solidity: function setTssGroupMember(uint256 _threshold, bytes[] _batchPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) SetTssGroupMember(opts *bind.TransactOpts, _threshold *big.Int, _batchPublicKey [][]byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "setTssGroupMember", _threshold, _batchPublicKey)
}

// SetTssGroupMember is a paid mutator transaction binding the contract method 0x1a47931b.
//
// Solidity: function setTssGroupMember(uint256 _threshold, bytes[] _batchPublicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) SetTssGroupMember(_threshold *big.Int, _batchPublicKey [][]byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetTssGroupMember(&_TssGroupManager.TransactOpts, _threshold, _batchPublicKey)
}

// SetTssGroupMember is a paid mutator transaction binding the contract method 0x1a47931b.
//
// Solidity: function setTssGroupMember(uint256 _threshold, bytes[] _batchPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) SetTssGroupMember(_threshold *big.Int, _batchPublicKey [][]byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetTssGroupMember(&_TssGroupManager.TransactOpts, _threshold, _batchPublicKey)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TssGroupManager *TssGroupManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TssGroupManager *TssGroupManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TransferOwnership(&_TssGroupManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TransferOwnership(&_TssGroupManager.TransactOpts, newOwner)
}

// UpdateTssMember is a paid mutator transaction binding the contract method 0x6cc3c0a4.
//
// Solidity: function updateTssMember(bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) UpdateTssMember(opts *bind.TransactOpts, _groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "updateTssMember", _groupPublicKey)
}

// UpdateTssMember is a paid mutator transaction binding the contract method 0x6cc3c0a4.
//
// Solidity: function updateTssMember(bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) UpdateTssMember(_groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.UpdateTssMember(&_TssGroupManager.TransactOpts, _groupPublicKey)
}

// UpdateTssMember is a paid mutator transaction binding the contract method 0x6cc3c0a4.
//
// Solidity: function updateTssMember(bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) UpdateTssMember(_groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.UpdateTssMember(&_TssGroupManager.TransactOpts, _groupPublicKey)
}

// TssGroupManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the TssGroupManager contract.
type TssGroupManagerInitializedIterator struct {
	Event *TssGroupManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerInitialized represents a Initialized event raised by the TssGroupManager contract.
type TssGroupManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_TssGroupManager *TssGroupManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*TssGroupManagerInitializedIterator, error) {

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerInitializedIterator{contract: _TssGroupManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_TssGroupManager *TssGroupManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *TssGroupManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerInitialized)
				if err := _TssGroupManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_TssGroupManager *TssGroupManagerFilterer) ParseInitialized(log types.Log) (*TssGroupManagerInitialized, error) {
	event := new(TssGroupManagerInitialized)
	if err := _TssGroupManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	return event, nil
}

// TssGroupManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the TssGroupManager contract.
type TssGroupManagerOwnershipTransferredIterator struct {
	Event *TssGroupManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerOwnershipTransferred represents a OwnershipTransferred event raised by the TssGroupManager contract.
type TssGroupManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_TssGroupManager *TssGroupManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*TssGroupManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerOwnershipTransferredIterator{contract: _TssGroupManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_TssGroupManager *TssGroupManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *TssGroupManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerOwnershipTransferred)
				if err := _TssGroupManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_TssGroupManager *TssGroupManagerFilterer) ParseOwnershipTransferred(log types.Log) (*TssGroupManagerOwnershipTransferred, error) {
	event := new(TssGroupManagerOwnershipTransferred)
	if err := _TssGroupManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	return event, nil
}

// TssGroupManagerTssActiveMemberAppendedIterator is returned from FilterTssActiveMemberAppended and is used to iterate over the raw logs and unpacked data for TssActiveMemberAppended events raised by the TssGroupManager contract.
type TssGroupManagerTssActiveMemberAppendedIterator struct {
	Event *TssGroupManagerTssActiveMemberAppended // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerTssActiveMemberAppendedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerTssActiveMemberAppended)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerTssActiveMemberAppended)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerTssActiveMemberAppendedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerTssActiveMemberAppendedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerTssActiveMemberAppended represents a TssActiveMemberAppended event raised by the TssGroupManager contract.
type TssGroupManagerTssActiveMemberAppended struct {
	RoundId          *big.Int
	GroupKey         []byte
	ActiveTssMembers [][]byte
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterTssActiveMemberAppended is a free log retrieval operation binding the contract event 0x61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b66.
//
// Solidity: event tssActiveMemberAppended(uint256 _roundId, bytes _groupKey, bytes[] activeTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) FilterTssActiveMemberAppended(opts *bind.FilterOpts) (*TssGroupManagerTssActiveMemberAppendedIterator, error) {

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "tssActiveMemberAppended")
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerTssActiveMemberAppendedIterator{contract: _TssGroupManager.contract, event: "tssActiveMemberAppended", logs: logs, sub: sub}, nil
}

// WatchTssActiveMemberAppended is a free log subscription operation binding the contract event 0x61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b66.
//
// Solidity: event tssActiveMemberAppended(uint256 _roundId, bytes _groupKey, bytes[] activeTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) WatchTssActiveMemberAppended(opts *bind.WatchOpts, sink chan<- *TssGroupManagerTssActiveMemberAppended) (event.Subscription, error) {

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "tssActiveMemberAppended")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerTssActiveMemberAppended)
				if err := _TssGroupManager.contract.UnpackLog(event, "tssActiveMemberAppended", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTssActiveMemberAppended is a log parse operation binding the contract event 0x61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b66.
//
// Solidity: event tssActiveMemberAppended(uint256 _roundId, bytes _groupKey, bytes[] activeTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) ParseTssActiveMemberAppended(log types.Log) (*TssGroupManagerTssActiveMemberAppended, error) {
	event := new(TssGroupManagerTssActiveMemberAppended)
	if err := _TssGroupManager.contract.UnpackLog(event, "tssActiveMemberAppended", log); err != nil {
		return nil, err
	}
	return event, nil
}

// TssGroupManagerTssGroupMemberAppendIterator is returned from FilterTssGroupMemberAppend and is used to iterate over the raw logs and unpacked data for TssGroupMemberAppend events raised by the TssGroupManager contract.
type TssGroupManagerTssGroupMemberAppendIterator struct {
	Event *TssGroupManagerTssGroupMemberAppend // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerTssGroupMemberAppendIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerTssGroupMemberAppend)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerTssGroupMemberAppend)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerTssGroupMemberAppendIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerTssGroupMemberAppendIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerTssGroupMemberAppend represents a TssGroupMemberAppend event raised by the TssGroupManager contract.
type TssGroupManagerTssGroupMemberAppend struct {
	RoundId            *big.Int
	Threshold          *big.Int
	InActiveTssMembers [][]byte
	Raw                types.Log // Blockchain specific contextual infos
}

// FilterTssGroupMemberAppend is a free log retrieval operation binding the contract event 0xfa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e.
//
// Solidity: event tssGroupMemberAppend(uint256 _roundId, uint256 _threshold, bytes[] _inActiveTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) FilterTssGroupMemberAppend(opts *bind.FilterOpts) (*TssGroupManagerTssGroupMemberAppendIterator, error) {

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "tssGroupMemberAppend")
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerTssGroupMemberAppendIterator{contract: _TssGroupManager.contract, event: "tssGroupMemberAppend", logs: logs, sub: sub}, nil
}

// WatchTssGroupMemberAppend is a free log subscription operation binding the contract event 0xfa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e.
//
// Solidity: event tssGroupMemberAppend(uint256 _roundId, uint256 _threshold, bytes[] _inActiveTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) WatchTssGroupMemberAppend(opts *bind.WatchOpts, sink chan<- *TssGroupManagerTssGroupMemberAppend) (event.Subscription, error) {

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "tssGroupMemberAppend")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerTssGroupMemberAppend)
				if err := _TssGroupManager.contract.UnpackLog(event, "tssGroupMemberAppend", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTssGroupMemberAppend is a log parse operation binding the contract event 0xfa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e.
//
// Solidity: event tssGroupMemberAppend(uint256 _roundId, uint256 _threshold, bytes[] _inActiveTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) ParseTssGroupMemberAppend(log types.Log) (*TssGroupManagerTssGroupMemberAppend, error) {
	event := new(TssGroupManagerTssGroupMemberAppend)
	if err := _TssGroupManager.contract.UnpackLog(event, "tssGroupMemberAppend", log); err != nil {
		return nil, err
	}
	return event, nil
}
