
networks:
  mantle:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/24
          gateway: 10.0.0.1

x-base: &base
  restart: unless-stopped
  networks:
    mantle: {}


x-base-env: &base-env
  TSS_NODE_BASE_DIR: /data/tssnode
  TSS_NODE_DB_DIR: /data/tssnode/db
  TSS_NODE_L1_URL: http://10.0.0.2:8545
  TSS_NODE_L2_ETH_RPC: http://10.0.0.5:8545

services:
  tss-manager:
    <<: *base
    image: mantlenetworkio/tss:latest
    container_name: bittss-manager
    environment:
      TSS_L1_URL: http://10.0.0.2:8545
      TSS_L1_CONFIRM_BLOCKS: 0
      TSS_L1_RECEIPT_CONFIRM_TIMEOUT: 30s
      TSS_SCC_CONTRACT_ADDRESS: 0xc48078a734c2e22D43F54B47F7a8fB314Fa5A601
      TSS_TSS_GROUP_CONTRACT_ADDRESS: 0x67EBb5690d1Fc1Bc0fa67cBD6Fe944515c5e7F93
      TSS_TSS_STAKING_SLASH_CONTRACT_ADDRESS: 0x2B8380FCA14b5F5C4a763bf38573A3c36a548c56
      TSS_SIGNED_BATCHES_WINDOW: 5
      TSS_MIN_SIGNED_IN_WINDOW: 2
    build:
      context: ..
      dockerfile: ./ops/docker/tss/Dockerfile.local
      target: tss
    command: ./tss manager -c config/tss-manager-config.toml
    ports:
      # expose the service to the host for getting the contract addrs
      - ${DEPLOYER_PORT:-8082}:8080
    volumes:
      - ./data/tss-manager:/root/tss-manager/db
      - ./config:/app/config

  tss-node1:
    <<: *base
    depends_on:
      - tss-manager
    image: mantlenetworkio/tss:latest
    container_name: bittss-node1
    build:
      context: ..
      dockerfile: ./ops/docker/tss/Dockerfile.local
      target: tss
    environment:
      <<: *base-env
      TSS_NODE_PRIVATE_KEY: 8579041c09247ea30aa30fdc4aad1897505ecfe44b92dc01c6481fae7d5dc705
      TSS_NODE_BOOTSTRAP_PEERS: >
        /ip4/10.0.0.15/tcp/8000/p2p/16Uiu2HAmBKgEjv9buq3LkSHrRRcTN3c5VbPskgaqwq6mRquHJvk4,
        /ip4/10.0.0.16/tcp/8000/p2p/16Uiu2HAmC3L4WmoJHcXhFtXDfg6BMcdweybEeLhfUtKMi4WhxViH,
        /ip4/10.0.0.17/tcp/8000/p2p/16Uiu2HAkwMunZrRiXKWJesEakL8UnrUQSR3sRVGve6HjYxdQnUZv
      TSS_NODE_EXTERNAL_IP: 10.0.0.14
      TSS_L1_URL: http://10.0.0.2:8545
      TSS_NODE_P2P_PORT: 8000
    command: ./tss node -c config/tss-node-config.toml
    ports:
     # expose the service to the host for getting the contract addrs
     - ${DEPLOYER_PORT:-8000}:8000
    volumes:
      - ./data/tss-1:/data
      - ./config:/app/config

  tss-node2:
    <<: *base
    depends_on:
      - tss-node1
    image: mantlenetworkio/tss:latest
    container_name: bittss-node2
    build:
      context: ..
      dockerfile: ./ops/docker/tss/Dockerfile.local
      target: tss
    command: ./tss node -c config/tss-node-config.toml
    environment:
      <<: *base-env
      TSS_NODE_PRIVATE_KEY: 2bdfd71614eb0d2a994ecd96ba5f1dc9774e13ccdaece910992e4818e823e822
      TSS_NODE_BOOTSTRAP_PEERS: >
        /ip4/10.0.0.14/tcp/8000/p2p/16Uiu2HAmQWNYM7JXW55Qs5z6mR49eVu5pdRk17dKZ6zRSscdcWve,
        /ip4/10.0.0.16/tcp/8000/p2p/16Uiu2HAmC3L4WmoJHcXhFtXDfg6BMcdweybEeLhfUtKMi4WhxViH,
        /ip4/10.0.0.17/tcp/8000/p2p/16Uiu2HAkwMunZrRiXKWJesEakL8UnrUQSR3sRVGve6HjYxdQnUZv
      TSS_NODE_EXTERNAL_IP: 10.0.0.15
      TSS_L1_URL: http://10.0.0.2:8545
      TSS_NODE_P2P_PORT: 8000
    ports:
      # expose the service to the host for getting the contract addrs
      - ${DEPLOYER_PORT:-8001}:8000
    volumes:
      - ./data/tss-2:/data
      - ./config:/app/config

  tss-node3:
    <<: *base
    depends_on:
      - tss-node1
      - tss-node2
    image: mantlenetworkio/tss:latest
    container_name: bittss-node3
    build:
      context: ..
      dockerfile: ./ops/docker/tss/Dockerfile.local
      target: tss
    command: ./tss node -c config/tss-node-config.toml
    environment:
      <<: *base-env
      TSS_NODE_PRIVATE_KEY: ad55949cb6419c86cd59fb7b36a3d86d4dd7ee9cae5c55d2fd9584c80ea5bacb
      TSS_NODE_BOOTSTRAP_PEERS: >
        /ip4/10.0.0.14/tcp/8000/p2p/16Uiu2HAmQWNYM7JXW55Qs5z6mR49eVu5pdRk17dKZ6zRSscdcWve,
        /ip4/10.0.0.15/tcp/8000/p2p/16Uiu2HAmBKgEjv9buq3LkSHrRRcTN3c5VbPskgaqwq6mRquHJvk4,
        /ip4/10.0.0.17/tcp/8000/p2p/16Uiu2HAkwMunZrRiXKWJesEakL8UnrUQSR3sRVGve6HjYxdQnUZv
      TSS_NODE_EXTERNAL_IP: 10.0.0.16
      TSS_L1_URL: http://10.0.0.2:8545
      TSS_NODE_P2P_PORT: 8000
    ports:
      # expose the service to the host for getting the contract addrs
      - ${DEPLOYER_PORT:-8002}:8000
    volumes:
      - ./data/tss-3:/data
      - ./config:/app/config

  tss-node4:
    <<: *base
    depends_on:
      - tss-node1
      - tss-node2
      - tss-node3
    image: mantlenetworkio/tss:latest
    container_name: bittss-node4
    build:
      context: ..
      dockerfile: ./ops/docker/tss/Dockerfile.local
      target: tss
    command: ./tss node -c config/tss-node-config.toml
    environment:
      <<: *base-env
      TSS_NODE_PRIVATE_KEY: a7e87580b54050212e20ab75fb808ec9c7f759201ec4fe9ea1acad85adaf9b52
      TSS_NODE_BOOTSTRAP_PEERS: >
        /ip4/10.0.0.14/tcp/8000/p2p/16Uiu2HAmQWNYM7JXW55Qs5z6mR49eVu5pdRk17dKZ6zRSscdcWve,
        /ip4/10.0.0.15/tcp/8000/p2p/16Uiu2HAmBKgEjv9buq3LkSHrRRcTN3c5VbPskgaqwq6mRquHJvk4,
        /ip4/10.0.0.16/tcp/8000/p2p/16Uiu2HAmC3L4WmoJHcXhFtXDfg6BMcdweybEeLhfUtKMi4WhxViH
      TSS_NODE_EXTERNAL_IP: 10.0.0.17
      TSS_L1_URL: http://10.0.0.2:8545
      TSS_NODE_P2P_PORT: 8000
    ports:
      # expose the service to the host for getting the contract addrs
      - ${DEPLOYER_PORT:-8003}:8000
    volumes:
      - ./data/tss-4:/data
      - ./config:/app/config
